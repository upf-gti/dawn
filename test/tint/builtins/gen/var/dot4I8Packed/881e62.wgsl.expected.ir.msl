#include <metal_stdlib>
using namespace metal;

struct tint_module_vars_struct {
  device int* prevent_dce;
};

struct VertexOutput {
  float4 pos;
  int prevent_dce;
};

struct vertex_main_outputs {
  float4 VertexOutput_pos [[position]];
  int VertexOutput_prevent_dce [[user(locn0)]] [[flat]];
};

int tint_packed_8bit_dot(uint lhs, uint rhs) {
  char4 const v = as_type<char4>(lhs);
  char4 const v_1 = as_type<char4>(rhs);
  return int(((((v[0u] * v_1[0u]) + (v[1u] * v_1[1u])) + (v[2u] * v_1[2u])) + (v[3u] * v_1[3u])));
}

int dot4I8Packed_881e62() {
  uint arg_0 = 1u;
  uint arg_1 = 1u;
  int res = tint_packed_8bit_dot(arg_0, arg_1);
  return res;
}

fragment void fragment_main(device int* prevent_dce [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce};
  (*tint_module_vars.prevent_dce) = dot4I8Packed_881e62();
}

kernel void compute_main(device int* prevent_dce [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce};
  (*tint_module_vars.prevent_dce) = dot4I8Packed_881e62();
}

VertexOutput vertex_main_inner() {
  VertexOutput out = {};
  out.pos = float4(0.0f);
  out.prevent_dce = dot4I8Packed_881e62();
  return out;
}

vertex vertex_main_outputs vertex_main() {
  VertexOutput const v_2 = vertex_main_inner();
  return vertex_main_outputs{.VertexOutput_pos=v_2.pos, .VertexOutput_prevent_dce=v_2.prevent_dce};
}
