SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 3> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_7:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%func_ = func():i32 {
  $B2: {
    %i:ptr<function, i32, read_write> = var
    %5:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
    %6:i32 = load %5
    %x_53:i32 = let %6
    store %i, %x_53
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %8:i32 = load %i
        %x_58:i32 = let %8
        %10:i32 = add %x_58, 1i
        store %i, %10
        if true [t: $B5] {  # if_1
          $B5: {  # true
            if true [t: $B6] {  # if_2
              $B6: {  # true
                %11:ptr<uniform, i32, read> = access %x_7, 0u, 2i, 0u
                %12:i32 = load %11
                %x_65:i32 = let %12
                ret %x_65
              }
            }
            exit_if  # if_1
          }
        }
        continue  # -> $B4
      }
      $B4: {  # continuing
        %14:i32 = load %i
        %x_66:i32 = let %14
        %16:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
        %17:i32 = load %16
        %x_68:i32 = let %17
        %19:bool = lt %x_66, %x_68
        %20:bool = eq %19, false
        break_if %20  # -> [t: exit_loop loop_1, f: $B3]
      }
    }
    %21:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
    %22:i32 = load %21
    %x_71:i32 = let %22
    ret %x_71
  }
}
%main_1 = func():void {
  $B7: {
    %25:i32 = call %func_
    %x_27:i32 = let %25
    %27:ptr<uniform, i32, read> = access %x_7, 0u, 2i, 0u
    %28:i32 = load %27
    %x_29:i32 = let %28
    %30:bool = eq %x_27, %x_29
    if %30 [t: $B8, f: $B9] {  # if_3
      $B8: {  # true
        %31:ptr<uniform, i32, read> = access %x_7, 0u, 2i, 0u
        %32:i32 = load %31
        %x_35:i32 = let %32
        %34:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
        %35:i32 = load %34
        %x_38:i32 = let %35
        %37:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
        %38:i32 = load %37
        %x_41:i32 = let %38
        %40:ptr<uniform, i32, read> = access %x_7, 0u, 2i, 0u
        %41:i32 = load %40
        %x_44:i32 = let %41
        %43:f32 = convert %x_35
        %44:f32 = let %43
        %45:f32 = convert %x_38
        %46:f32 = let %45
        %47:f32 = convert %x_41
        %48:f32 = let %47
        %49:f32 = convert %x_44
        %50:vec4<f32> = construct %44, %46, %48, %49
        store %x_GLF_color, %50
        exit_if  # if_3
      }
      $B9: {  # false
        %51:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
        %52:i32 = load %51
        %x_48:i32 = let %52
        %54:f32 = convert %x_48
        %x_49:f32 = let %54
        %56:vec4<f32> = construct %x_49, %x_49, %x_49, %x_49
        store %x_GLF_color, %56
        exit_if  # if_3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B10: {
    %58:void = call %main_1
    %59:vec4<f32> = load %x_GLF_color
    %60:main_out = construct %59
    ret %60
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
