SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 2> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_5:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_8:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void {
  $B2: {
    %i:ptr<function, i32, read_write> = var
    %6:ptr<uniform, i32, read> = access %x_5, 0u, 0i, 0u
    %7:i32 = load %6
    %x_29:i32 = let %7
    %9:f32 = convert %x_29
    %x_30:f32 = let %9
    %11:vec4<f32> = construct %x_30, %x_30, %x_30, %x_30
    store %x_GLF_color, %11
    %12:ptr<uniform, i32, read> = access %x_5, 0u, 0i, 0u
    %13:i32 = load %12
    %x_33:i32 = let %13
    store %i, %x_33
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %15:i32 = load %i
        %x_38:i32 = let %15
        %17:ptr<uniform, i32, read> = access %x_5, 0u, 1i, 0u
        %18:i32 = load %17
        %x_40:i32 = let %18
        %20:bool = lt %x_38, %x_40
        if %20 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        %21:ptr<uniform, f32, read> = access %x_8, 0u, 1i, 0u
        %22:f32 = load %21
        %x_44:f32 = let %22
        %24:i32 = load %i
        %x_45:i32 = let %24
        %26:f32 = convert %x_45
        %27:bool = lte %x_44, %26
        %28:bool = eq %27, false
        if %28 [t: $B7] {  # if_2
          $B7: {  # true
            %29:ptr<uniform, f32, read> = access %x_8, 0u, 0i, 0u
            %30:f32 = load %29
            %x_52:f32 = let %30
            %32:i32 = load %i
            %x_53:i32 = let %32
            %34:i32 = load %i
            %x_55:i32 = let %34
            %36:ptr<uniform, f32, read> = access %x_8, 0u, 0i, 0u
            %37:f32 = load %36
            %x_58:f32 = let %37
            %39:vec4<f32> = load %x_GLF_color
            %x_60:vec4<f32> = let %39
            %41:f32 = convert %x_53
            %42:f32 = let %41
            %43:f32 = convert %x_55
            %44:vec4<f32> = construct %x_52, %42, %43, %x_58
            %45:vec4<f32> = add %x_60, %44
            store %x_GLF_color, %45
            exit_if  # if_2
          }
        }
        continue  # -> $B4
      }
      $B4: {  # continuing
        %46:i32 = load %i
        %x_62:i32 = let %46
        %48:i32 = add %x_62, 1i
        store %i, %48
        next_iteration  # -> $B3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B8: {
    %50:void = call %main_1
    %51:vec4<f32> = load %x_GLF_color
    %52:main_out = construct %51
    ret %52
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
