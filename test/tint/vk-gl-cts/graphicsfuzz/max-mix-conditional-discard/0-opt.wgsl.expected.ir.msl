SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: buf0 = struct @align(8) {
  injectionSwitch:vec2<f32> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_5:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %gv:ptr<private, vec4<f32>, read_write> = var
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %continue_execution:ptr<private, bool, read_write> = var, true
}

%main_1 = func():void {
  $B2: {
    %temp:ptr<function, i32, read_write> = var
    %7:ptr<uniform, vec2<f32>, read> = access %x_5, 0u
    %8:f32 = load_vector_element %7, 0u
    %x_39:f32 = let %8
    %10:bool = gt %x_39, 2.0f
    if %10 [t: $B3] {  # if_1
      $B3: {  # true
        %11:vec4<f32> = load %gv
        %x_8:vec4<f32> = let %11
        %13:vec4<f32> = mix vec4<f32>(1.0f), vec4<f32>(1.0f), %x_8
        %14:vec4<f32> = max %13, vec4<f32>(8.6000003814697265625f)
        %15:f32 = access %14, 1u
        %16:i32 = call %tint_f32_to_i32, %15
        store %temp, %16
        %18:i32 = load %temp
        %x_44:i32 = let %18
        %20:bool = lt %x_44, 150i
        if %20 [t: $B4] {  # if_2
          $B4: {  # true
            store %continue_execution, false
            exit_if  # if_2
          }
        }
        %21:i32 = load %temp
        %x_48:i32 = let %21
        %23:bool = lt %x_48, 180i
        if %23 [t: $B5] {  # if_3
          $B5: {  # true
            store %continue_execution, false
            exit_if  # if_3
          }
        }
        exit_if  # if_1
      }
    }
    store %x_GLF_color, vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f)
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B6: {
    %25:void = call %main_1
    %26:vec4<f32> = load %x_GLF_color
    %27:main_out = construct %26
    %28:bool = load %continue_execution
    %29:bool = eq %28, false
    if %29 [t: $B7] {  # if_4
      $B7: {  # true
        terminate_invocation
      }
    }
    ret %27
  }
}
%tint_f32_to_i32 = func(%value:f32):i32 {
  $B8: {
    %31:i32 = convert %value
    %32:bool = gte %value, -2147483648.0f
    %33:i32 = select -2147483648i, %31, %32
    %34:bool = lte %value, 2147483520.0f
    %35:i32 = select 2147483647i, %33, %34
    ret %35
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
