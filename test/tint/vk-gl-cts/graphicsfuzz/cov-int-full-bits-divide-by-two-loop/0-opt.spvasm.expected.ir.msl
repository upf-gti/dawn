SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_7:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %a:ptr<function, i32, read_write> = var
    %i:ptr<function, i32, read_write> = var
    %7:f32 = load_vector_element %gl_FragCoord, 0u
    %8:i32 = call %tint_f32_to_i32, %7
    %10:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
    %11:i32 = load %10
    %12:bool = lt %8, %11
    %13:i32 = select -1i, 0i, %12
    store %a, %13
    store %i, 0i
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %14:i32 = load %i
        %15:bool = lt %14, 5i
        if %15 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        %16:i32 = load %a
        %17:i32 = call %tint_div_i32, %16, 2i
        store %a, %17
        continue  # -> $B4
      }
      $B4: {  # continuing
        %19:i32 = load %i
        %20:i32 = add %19, 1i
        store %i, %20
        next_iteration  # -> $B3
      }
    }
    %21:i32 = load %a
    %22:bool = eq %21, 0i
    if %22 [t: $B7, f: $B8] {  # if_2
      $B7: {  # true
        %23:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
        %24:i32 = load %23
        %25:f32 = convert %24
        %26:f32 = let %25
        %27:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
        %28:i32 = load %27
        %29:f32 = convert %28
        %30:f32 = let %29
        %31:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
        %32:i32 = load %31
        %33:f32 = convert %32
        %34:f32 = let %33
        %35:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
        %36:i32 = load %35
        %37:f32 = convert %36
        %38:vec4<f32> = construct %26, %30, %34, %37
        store %x_GLF_color, %38
        exit_if  # if_2
      }
      $B8: {  # false
        %39:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
        %40:i32 = load %39
        %41:f32 = convert %40
        %42:vec4<f32> = construct %41
        store %x_GLF_color, %42
        exit_if  # if_2
      }
    }
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out {
  $B9: {
    store %gl_FragCoord, %gl_FragCoord_param
    %45:void = call %main_1
    %46:vec4<f32> = load %x_GLF_color
    %47:main_out = construct %46
    ret %47
  }
}
%tint_div_i32 = func(%lhs:i32, %rhs:i32):i32 {
  $B10: {
    %50:bool = eq %rhs, 0i
    %51:bool = eq %lhs, -2147483648i
    %52:bool = eq %rhs, -1i
    %53:bool = and %51, %52
    %54:bool = or %50, %53
    %55:i32 = select %rhs, 1i, %54
    %56:i32 = div %lhs, %55
    ret %56
  }
}
%tint_f32_to_i32 = func(%value:f32):i32 {
  $B11: {
    %58:i32 = convert %value
    %59:bool = gte %value, -2147483648.0f
    %60:i32 = select -2147483648i, %58, %59
    %61:bool = lte %value, 2147483520.0f
    %62:i32 = select 2147483647i, %60, %61
    ret %62
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
