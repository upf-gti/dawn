SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: buf1 = struct @align(8) {
  v1:vec2<f32> @offset(0)
}

strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_6:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_8:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void {
  $B2: {
    %b:ptr<function, bool, read_write> = var
    store %b, true
    %6:ptr<uniform, vec2<f32>, read> = access %x_6, 0u
    %7:f32 = load_vector_element %6, 0u
    %8:ptr<uniform, vec2<f32>, read> = access %x_6, 0u
    %9:f32 = load_vector_element %8, 1u
    %10:bool = gt %7, %9
    if %10 [t: $B3] {  # if_1
      $B3: {  # true
        %11:ptr<uniform, vec2<f32>, read> = access %x_6, 0u
        %12:f32 = load_vector_element %11, 0u
        %13:ptr<uniform, vec2<f32>, read> = access %x_6, 0u
        %14:f32 = load_vector_element %13, 1u
        %15:bool = lt %12, %14
        if %15 [t: $B4] {  # if_2
          $B4: {  # true
            store %b, false
            exit_if  # if_2
          }
        }
        exit_if  # if_1
      }
    }
    %16:bool = load %b
    if %16 [t: $B5, f: $B6] {  # if_3
      $B5: {  # true
        %17:ptr<uniform, i32, read> = access %x_8, 0u, 0i, 0u
        %18:i32 = load %17
        %19:f32 = convert %18
        %20:f32 = let %19
        %21:ptr<uniform, i32, read> = access %x_8, 0u, 1i, 0u
        %22:i32 = load %21
        %23:f32 = convert %22
        %24:f32 = let %23
        %25:ptr<uniform, i32, read> = access %x_8, 0u, 1i, 0u
        %26:i32 = load %25
        %27:f32 = convert %26
        %28:f32 = let %27
        %29:ptr<uniform, i32, read> = access %x_8, 0u, 0i, 0u
        %30:i32 = load %29
        %31:f32 = convert %30
        %32:vec4<f32> = construct %20, %24, %28, %31
        store %x_GLF_color, %32
        exit_if  # if_3
      }
      $B6: {  # false
        %33:ptr<uniform, i32, read> = access %x_8, 0u, 1i, 0u
        %34:i32 = load %33
        %35:f32 = convert %34
        %36:vec4<f32> = construct %35
        store %x_GLF_color, %36
        exit_if  # if_3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B7: {
    %38:void = call %main_1
    %39:vec4<f32> = load %x_GLF_color
    %40:main_out = construct %39
    ret %40
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
