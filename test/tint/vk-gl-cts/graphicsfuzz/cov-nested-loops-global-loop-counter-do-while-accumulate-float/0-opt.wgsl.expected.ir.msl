SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 3> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 4> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_GLF_global_loop_count:ptr<private, i32, read_write> = var
  %x_7:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_10:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %f:ptr<function, f32, read_write> = var
    %i:ptr<function, i32, read_write> = var
    %i_1:ptr<function, i32, read_write> = var
    %i_2:ptr<function, i32, read_write> = var
    %i_3:ptr<function, i32, read_write> = var
    %i_4:ptr<function, i32, read_write> = var
    %i_5:ptr<function, i32, read_write> = var
    %i_6:ptr<function, i32, read_write> = var
    %i_7:ptr<function, i32, read_write> = var
    %i_8:ptr<function, i32, read_write> = var
    %i_9:ptr<function, i32, read_write> = var
    %i_10:ptr<function, i32, read_write> = var
    %i_11:ptr<function, i32, read_write> = var
    %i_12:ptr<function, i32, read_write> = var
    %i_13:ptr<function, i32, read_write> = var
    %i_14:ptr<function, i32, read_write> = var
    %sum:ptr<function, f32, read_write> = var
    %r:ptr<function, i32, read_write> = var
    store %x_GLF_global_loop_count, 0i
    %24:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %25:f32 = load %24
    %x_53:f32 = let %25
    store %f, %x_53
    %27:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
    %28:i32 = load %27
    %x_55:i32 = let %28
    store %i, %x_55
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %30:i32 = load %i
        %x_60:i32 = let %30
        %32:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %33:i32 = load %32
        %x_62:i32 = let %33
        %35:bool = lt %x_60, %x_62
        if %35 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        %36:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %37:i32 = load %36
        %x_66:i32 = let %37
        store %i_1, %x_66
        loop [b: $B7, c: $B8] {  # loop_2
          $B7: {  # body
            %39:i32 = load %i_1
            %x_71:i32 = let %39
            %41:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
            %42:i32 = load %41
            %x_73:i32 = let %42
            %44:bool = lt %x_71, %x_73
            if %44 [t: $B9, f: $B10] {  # if_2
              $B9: {  # true
                exit_if  # if_2
              }
              $B10: {  # false
                exit_loop  # loop_2
              }
            }
            %45:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
            %46:i32 = load %45
            %x_77:i32 = let %46
            store %i_2, %x_77
            loop [b: $B11, c: $B12] {  # loop_3
              $B11: {  # body
                %48:i32 = load %i_2
                %x_82:i32 = let %48
                %50:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
                %51:i32 = load %50
                %x_84:i32 = let %51
                %53:bool = lt %x_82, %x_84
                if %53 [t: $B13, f: $B14] {  # if_3
                  $B13: {  # true
                    exit_if  # if_3
                  }
                  $B14: {  # false
                    exit_loop  # loop_3
                  }
                }
                %54:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
                %55:i32 = load %54
                %x_88:i32 = let %55
                store %i_3, %x_88
                loop [b: $B15, c: $B16] {  # loop_4
                  $B15: {  # body
                    %57:i32 = load %i_3
                    %x_93:i32 = let %57
                    %59:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
                    %60:i32 = load %59
                    %x_95:i32 = let %60
                    %62:bool = lt %x_93, %x_95
                    if %62 [t: $B17, f: $B18] {  # if_4
                      $B17: {  # true
                        exit_if  # if_4
                      }
                      $B18: {  # false
                        exit_loop  # loop_4
                      }
                    }
                    %63:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
                    %64:i32 = load %63
                    %x_99:i32 = let %64
                    store %i_4, %x_99
                    loop [b: $B19, c: $B20] {  # loop_5
                      $B19: {  # body
                        %66:i32 = load %i_4
                        %x_104:i32 = let %66
                        %68:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
                        %69:i32 = load %68
                        %x_106:i32 = let %69
                        %71:bool = lt %x_104, %x_106
                        if %71 [t: $B21, f: $B22] {  # if_5
                          $B21: {  # true
                            exit_if  # if_5
                          }
                          $B22: {  # false
                            exit_loop  # loop_5
                          }
                        }
                        %72:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
                        %73:i32 = load %72
                        %x_110:i32 = let %73
                        store %i_5, %x_110
                        loop [b: $B23, c: $B24] {  # loop_6
                          $B23: {  # body
                            %75:i32 = load %i_5
                            %x_115:i32 = let %75
                            %77:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
                            %78:i32 = load %77
                            %x_117:i32 = let %78
                            %80:bool = lt %x_115, %x_117
                            if %80 [t: $B25, f: $B26] {  # if_6
                              $B25: {  # true
                                exit_if  # if_6
                              }
                              $B26: {  # false
                                exit_loop  # loop_6
                              }
                            }
                            %81:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
                            %82:i32 = load %81
                            %x_121:i32 = let %82
                            store %i_6, %x_121
                            loop [b: $B27, c: $B28] {  # loop_7
                              $B27: {  # body
                                %84:i32 = load %i_6
                                %x_126:i32 = let %84
                                %86:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
                                %87:i32 = load %86
                                %x_128:i32 = let %87
                                %89:bool = lt %x_126, %x_128
                                if %89 [t: $B29, f: $B30] {  # if_7
                                  $B29: {  # true
                                    exit_if  # if_7
                                  }
                                  $B30: {  # false
                                    exit_loop  # loop_7
                                  }
                                }
                                %90:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
                                %91:i32 = load %90
                                %x_132:i32 = let %91
                                store %i_7, %x_132
                                loop [b: $B31, c: $B32] {  # loop_8
                                  $B31: {  # body
                                    %93:i32 = load %i_7
                                    %x_137:i32 = let %93
                                    %95:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
                                    %96:i32 = load %95
                                    %x_139:i32 = let %96
                                    %98:bool = lt %x_137, %x_139
                                    if %98 [t: $B33, f: $B34] {  # if_8
                                      $B33: {  # true
                                        exit_if  # if_8
                                      }
                                      $B34: {  # false
                                        exit_loop  # loop_8
                                      }
                                    }
                                    %99:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
                                    %100:i32 = load %99
                                    %x_143:i32 = let %100
                                    store %i_8, %x_143
                                    loop [b: $B35, c: $B36] {  # loop_9
                                      $B35: {  # body
                                        %102:i32 = load %i_8
                                        %x_148:i32 = let %102
                                        %104:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
                                        %105:i32 = load %104
                                        %x_150:i32 = let %105
                                        %107:bool = lt %x_148, %x_150
                                        if %107 [t: $B37, f: $B38] {  # if_9
                                          $B37: {  # true
                                            exit_if  # if_9
                                          }
                                          $B38: {  # false
                                            exit_loop  # loop_9
                                          }
                                        }
                                        %108:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
                                        %109:i32 = load %108
                                        %x_154:i32 = let %109
                                        store %i_9, %x_154
                                        loop [b: $B39, c: $B40] {  # loop_10
                                          $B39: {  # body
                                            %111:i32 = load %i_9
                                            %x_159:i32 = let %111
                                            %113:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
                                            %114:i32 = load %113
                                            %x_161:i32 = let %114
                                            %116:bool = lt %x_159, %x_161
                                            if %116 [t: $B41, f: $B42] {  # if_10
                                              $B41: {  # true
                                                exit_if  # if_10
                                              }
                                              $B42: {  # false
                                                exit_loop  # loop_10
                                              }
                                            }
                                            %117:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
                                            %118:i32 = load %117
                                            %x_165:i32 = let %118
                                            store %i_10, %x_165
                                            loop [b: $B43, c: $B44] {  # loop_11
                                              $B43: {  # body
                                                %120:i32 = load %i_10
                                                %x_170:i32 = let %120
                                                %122:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
                                                %123:i32 = load %122
                                                %x_172:i32 = let %123
                                                %125:bool = lt %x_170, %x_172
                                                if %125 [t: $B45, f: $B46] {  # if_11
                                                  $B45: {  # true
                                                    exit_if  # if_11
                                                  }
                                                  $B46: {  # false
                                                    exit_loop  # loop_11
                                                  }
                                                }
                                                %126:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
                                                %127:i32 = load %126
                                                %x_176:i32 = let %127
                                                store %i_11, %x_176
                                                loop [b: $B47, c: $B48] {  # loop_12
                                                  $B47: {  # body
                                                    %129:i32 = load %i_11
                                                    %x_181:i32 = let %129
                                                    %131:ptr<uniform, i32, read> = access %x_10, 0u, 2i, 0u
                                                    %132:i32 = load %131
                                                    %x_183:i32 = let %132
                                                    %134:bool = lt %x_181, %x_183
                                                    if %134 [t: $B49, f: $B50] {  # if_12
                                                      $B49: {  # true
                                                        exit_if  # if_12
                                                      }
                                                      $B50: {  # false
                                                        exit_loop  # loop_12
                                                      }
                                                    }
                                                    %135:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
                                                    %136:i32 = load %135
                                                    %x_187:i32 = let %136
                                                    store %i_12, %x_187
                                                    loop [b: $B51, c: $B52] {  # loop_13
                                                      $B51: {  # body
                                                        %138:i32 = load %i_12
                                                        %x_192:i32 = let %138
                                                        %140:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
                                                        %141:i32 = load %140
                                                        %x_194:i32 = let %141
                                                        %143:bool = lt %x_192, %x_194
                                                        if %143 [t: $B53, f: $B54] {  # if_13
                                                          $B53: {  # true
                                                            exit_if  # if_13
                                                          }
                                                          $B54: {  # false
                                                            exit_loop  # loop_13
                                                          }
                                                        }
                                                        %144:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
                                                        %145:i32 = load %144
                                                        %x_198:i32 = let %145
                                                        store %i_13, %x_198
                                                        loop [b: $B55, c: $B56] {  # loop_14
                                                          $B55: {  # body
                                                            %147:i32 = load %i_13
                                                            %x_203:i32 = let %147
                                                            %149:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
                                                            %150:i32 = load %149
                                                            %x_205:i32 = let %150
                                                            %152:bool = lt %x_203, %x_205
                                                            if %152 [t: $B57, f: $B58] {  # if_14
                                                              $B57: {  # true
                                                                exit_if  # if_14
                                                              }
                                                              $B58: {  # false
                                                                exit_loop  # loop_14
                                                              }
                                                            }
                                                            %153:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
                                                            %154:i32 = load %153
                                                            %x_209:i32 = let %154
                                                            store %i_14, %x_209
                                                            loop [b: $B59, c: $B60] {  # loop_15
                                                              $B59: {  # body
                                                                %156:i32 = load %i_14
                                                                %x_214:i32 = let %156
                                                                %158:ptr<uniform, i32, read> = access %x_10, 0u, 2i, 0u
                                                                %159:i32 = load %158
                                                                %x_216:i32 = let %159
                                                                %161:bool = lt %x_214, %x_216
                                                                if %161 [t: $B61, f: $B62] {  # if_15
                                                                  $B61: {  # true
                                                                    exit_if  # if_15
                                                                  }
                                                                  $B62: {  # false
                                                                    exit_loop  # loop_15
                                                                  }
                                                                }
                                                                loop [b: $B63, c: $B64] {  # loop_16
                                                                  $B63: {  # body
                                                                    %162:i32 = load %x_GLF_global_loop_count
                                                                    %x_223:i32 = let %162
                                                                    %164:i32 = add %x_223, 1i
                                                                    store %x_GLF_global_loop_count, %164
                                                                    continue  # -> $B64
                                                                  }
                                                                  $B64: {  # continuing
                                                                    %165:i32 = load %x_GLF_global_loop_count
                                                                    %x_225:i32 = let %165
                                                                    %167:ptr<uniform, i32, read> = access %x_10, 0u, 3i, 0u
                                                                    %168:i32 = load %167
                                                                    %x_227:i32 = let %168
                                                                    %170:i32 = sub 100i, %x_227
                                                                    %171:bool = lt %x_225, %170
                                                                    %172:bool = eq %171, false
                                                                    break_if %172  # -> [t: exit_loop loop_16, f: $B63]
                                                                  }
                                                                }
                                                                %173:ptr<uniform, f32, read> = access %x_7, 0u, 0i, 0u
                                                                %174:f32 = load %173
                                                                %x_231:f32 = let %174
                                                                %176:f32 = load %f
                                                                %x_232:f32 = let %176
                                                                %178:f32 = add %x_232, %x_231
                                                                store %f, %178
                                                                continue  # -> $B60
                                                              }
                                                              $B60: {  # continuing
                                                                %179:i32 = load %i_14
                                                                %x_234:i32 = let %179
                                                                %181:i32 = add %x_234, 1i
                                                                store %i_14, %181
                                                                next_iteration  # -> $B59
                                                              }
                                                            }
                                                            continue  # -> $B56
                                                          }
                                                          $B56: {  # continuing
                                                            %182:i32 = load %i_13
                                                            %x_236:i32 = let %182
                                                            %184:i32 = add %x_236, 1i
                                                            store %i_13, %184
                                                            next_iteration  # -> $B55
                                                          }
                                                        }
                                                        continue  # -> $B52
                                                      }
                                                      $B52: {  # continuing
                                                        %185:i32 = load %i_12
                                                        %x_238:i32 = let %185
                                                        %187:i32 = add %x_238, 1i
                                                        store %i_12, %187
                                                        next_iteration  # -> $B51
                                                      }
                                                    }
                                                    continue  # -> $B48
                                                  }
                                                  $B48: {  # continuing
                                                    %188:i32 = load %i_11
                                                    %x_240:i32 = let %188
                                                    %190:i32 = add %x_240, 1i
                                                    store %i_11, %190
                                                    next_iteration  # -> $B47
                                                  }
                                                }
                                                continue  # -> $B44
                                              }
                                              $B44: {  # continuing
                                                %191:i32 = load %i_10
                                                %x_242:i32 = let %191
                                                %193:i32 = add %x_242, 1i
                                                store %i_10, %193
                                                next_iteration  # -> $B43
                                              }
                                            }
                                            continue  # -> $B40
                                          }
                                          $B40: {  # continuing
                                            %194:i32 = load %i_9
                                            %x_244:i32 = let %194
                                            %196:i32 = add %x_244, 1i
                                            store %i_9, %196
                                            next_iteration  # -> $B39
                                          }
                                        }
                                        continue  # -> $B36
                                      }
                                      $B36: {  # continuing
                                        %197:i32 = load %i_8
                                        %x_246:i32 = let %197
                                        %199:i32 = add %x_246, 1i
                                        store %i_8, %199
                                        next_iteration  # -> $B35
                                      }
                                    }
                                    continue  # -> $B32
                                  }
                                  $B32: {  # continuing
                                    %200:i32 = load %i_7
                                    %x_248:i32 = let %200
                                    %202:i32 = add %x_248, 1i
                                    store %i_7, %202
                                    next_iteration  # -> $B31
                                  }
                                }
                                continue  # -> $B28
                              }
                              $B28: {  # continuing
                                %203:i32 = load %i_6
                                %x_250:i32 = let %203
                                %205:i32 = add %x_250, 1i
                                store %i_6, %205
                                next_iteration  # -> $B27
                              }
                            }
                            continue  # -> $B24
                          }
                          $B24: {  # continuing
                            %206:i32 = load %i_5
                            %x_252:i32 = let %206
                            %208:i32 = add %x_252, 1i
                            store %i_5, %208
                            next_iteration  # -> $B23
                          }
                        }
                        continue  # -> $B20
                      }
                      $B20: {  # continuing
                        %209:i32 = load %i_4
                        %x_254:i32 = let %209
                        %211:i32 = add %x_254, 1i
                        store %i_4, %211
                        next_iteration  # -> $B19
                      }
                    }
                    continue  # -> $B16
                  }
                  $B16: {  # continuing
                    %212:i32 = load %i_3
                    %x_256:i32 = let %212
                    %214:i32 = add %x_256, 1i
                    store %i_3, %214
                    next_iteration  # -> $B15
                  }
                }
                continue  # -> $B12
              }
              $B12: {  # continuing
                %215:i32 = load %i_2
                %x_258:i32 = let %215
                %217:i32 = add %x_258, 1i
                store %i_2, %217
                next_iteration  # -> $B11
              }
            }
            continue  # -> $B8
          }
          $B8: {  # continuing
            %218:i32 = load %i_1
            %x_260:i32 = let %218
            %220:i32 = add %x_260, 1i
            store %i_1, %220
            next_iteration  # -> $B7
          }
        }
        continue  # -> $B4
      }
      $B4: {  # continuing
        %221:i32 = load %i
        %x_262:i32 = let %221
        %223:i32 = add %x_262, 1i
        store %i, %223
        next_iteration  # -> $B3
      }
    }
    %224:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %225:f32 = load %224
    %x_265:f32 = let %225
    store %sum, %x_265
    %227:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
    %228:i32 = load %227
    %x_267:i32 = let %228
    store %r, %x_267
    loop [b: $B65, c: $B66] {  # loop_17
      $B65: {  # body
        %230:i32 = load %x_GLF_global_loop_count
        %x_272:i32 = let %230
        %232:bool = lt %x_272, 100i
        if %232 [t: $B67, f: $B68] {  # if_16
          $B67: {  # true
            exit_if  # if_16
          }
          $B68: {  # false
            exit_loop  # loop_17
          }
        }
        %233:i32 = load %x_GLF_global_loop_count
        %x_275:i32 = let %233
        %235:i32 = add %x_275, 1i
        store %x_GLF_global_loop_count, %235
        %236:f32 = load %f
        %x_277:f32 = let %236
        %238:f32 = load %sum
        %x_278:f32 = let %238
        %240:f32 = add %x_278, %x_277
        store %sum, %240
        continue  # -> $B66
      }
      $B66: {  # continuing
        %241:i32 = load %r
        %x_280:i32 = let %241
        %243:i32 = add %x_280, 1i
        store %r, %243
        next_iteration  # -> $B65
      }
    }
    %244:f32 = load %sum
    %x_282:f32 = let %244
    %246:ptr<uniform, f32, read> = access %x_7, 0u, 2i, 0u
    %247:f32 = load %246
    %x_284:f32 = let %247
    %249:bool = eq %x_282, %x_284
    if %249 [t: $B69, f: $B70] {  # if_17
      $B69: {  # true
        %250:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %251:i32 = load %250
        %x_290:i32 = let %251
        %253:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %254:i32 = load %253
        %x_293:i32 = let %254
        %256:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %257:i32 = load %256
        %x_296:i32 = let %257
        %259:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %260:i32 = load %259
        %x_299:i32 = let %260
        %262:f32 = convert %x_290
        %263:f32 = let %262
        %264:f32 = convert %x_293
        %265:f32 = let %264
        %266:f32 = convert %x_296
        %267:f32 = let %266
        %268:f32 = convert %x_299
        %269:vec4<f32> = construct %263, %265, %267, %268
        store %x_GLF_color, %269
        exit_if  # if_17
      }
      $B70: {  # false
        %270:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %271:i32 = load %270
        %x_303:i32 = let %271
        %273:f32 = convert %x_303
        %x_304:f32 = let %273
        %275:vec4<f32> = construct %x_304, %x_304, %x_304, %x_304
        store %x_GLF_color, %275
        exit_if  # if_17
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B71: {
    %277:void = call %main_1
    %278:vec4<f32> = load %x_GLF_color
    %279:main_out = construct %278
    ret %279
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
