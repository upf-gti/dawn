SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 4> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %v:ptr<function, vec4<f32>, read_write> = var
    %i:ptr<function, i32, read_write> = var
    %6:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
    %7:i32 = load %6
    %8:f32 = convert %7
    %9:vec4<f32> = construct %8
    store %v, %9
    %10:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %11:i32 = load %10
    store %i, %11
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %12:i32 = load %i
        %13:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
        %14:i32 = load %13
        %15:bool = lt %12, %14
        if %15 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        %16:i32 = load %i
        %x_50:i32 = let %16
        %18:u32 = access vec3<u32>(0u, 1u, 2u), %x_50
        %19:i32 = load %i
        %20:f32 = convert %19
        store_vector_element %v, %18, %20
        continue  # -> $B4
      }
      $B4: {  # continuing
        %21:i32 = load %i
        %22:i32 = add %21, 1i
        store %i, %22
        next_iteration  # -> $B3
      }
    }
    %23:vec4<f32> = load %v
    %24:vec4<f32> = let %23
    %25:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %26:i32 = load %25
    %27:f32 = convert %26
    %28:f32 = let %27
    %29:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %30:i32 = load %29
    %31:f32 = convert %30
    %32:f32 = let %31
    %33:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
    %34:i32 = load %33
    %35:f32 = convert %34
    %36:f32 = let %35
    %37:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
    %38:i32 = load %37
    %39:f32 = convert %38
    %40:vec4<f32> = construct %28, %32, %36, %39
    %41:vec4<bool> = eq %24, %40
    %42:bool = all %41
    if %42 [t: $B7, f: $B8] {  # if_2
      $B7: {  # true
        %43:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
        %44:i32 = load %43
        %45:f32 = convert %44
        %46:f32 = let %45
        %47:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %48:i32 = load %47
        %49:f32 = convert %48
        %50:f32 = let %49
        %51:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %52:i32 = load %51
        %53:f32 = convert %52
        %54:f32 = let %53
        %55:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
        %56:i32 = load %55
        %57:f32 = convert %56
        %58:vec4<f32> = construct %46, %50, %54, %57
        store %x_GLF_color, %58
        exit_if  # if_2
      }
      $B8: {  # false
        %59:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %60:i32 = load %59
        %61:f32 = convert %60
        %62:vec4<f32> = construct %61
        store %x_GLF_color, %62
        exit_if  # if_2
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B9: {
    %64:void = call %main_1
    %65:vec4<f32> = load %x_GLF_color
    %66:main_out = construct %65
    ret %66
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
