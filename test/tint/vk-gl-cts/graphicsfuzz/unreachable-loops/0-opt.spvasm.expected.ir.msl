SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: buf0 = struct @align(8) {
  injected:vec2<f32> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_5:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void {
  $B2: {
    %m:ptr<function, i32, read_write> = var
    store %x_GLF_color, vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f)
    %5:ptr<uniform, vec2<f32>, read> = access %x_5, 0u
    %6:f32 = load_vector_element %5, 0u
    %7:ptr<uniform, vec2<f32>, read> = access %x_5, 0u
    %8:f32 = load_vector_element %7, 1u
    %9:bool = gt %6, %8
    if %9 [t: $B3] {  # if_1
      $B3: {  # true
        loop [b: $B4, c: $B5] {  # loop_1
          $B4: {  # body
            continue  # -> $B5
          }
          $B5: {  # continuing
            break_if true  # -> [t: exit_loop loop_1, f: $B4]
          }
        }
        store %m, 1i
        loop [b: $B6, c: $B7] {  # loop_2
          $B6: {  # body
            if true [t: $B8, f: $B9] {  # if_2
              $B8: {  # true
                exit_if  # if_2
              }
              $B9: {  # false
                exit_loop  # loop_2
              }
            }
            store %x_GLF_color, vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f)
            continue  # -> $B7
          }
          $B7: {  # continuing
            next_iteration  # -> $B6
          }
        }
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B10: {
    %11:void = call %main_1
    %12:vec4<f32> = load %x_GLF_color
    %13:main_out = construct %12
    ret %13
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
