SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: buf0 = struct @align(8) {
  injectionSwitch:vec2<f32> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_7:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %a:ptr<function, i32, read_write> = var
    %i:ptr<function, i32, read_write> = var
    store %a, 0i
    store %i, 0i
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %6:i32 = load %i
        %x_33:i32 = let %6
        %8:ptr<uniform, vec2<f32>, read> = access %x_7, 0u
        %9:f32 = load_vector_element %8, 1u
        %x_35:f32 = let %9
        %11:i32 = call %tint_f32_to_i32, %x_35
        %13:bool = lt %x_33, %11
        if %13 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        %14:i32 = load %a
        %x_39:i32 = let %14
        %16:bool = gt %x_39, 0i
        if %16 [t: $B7] {  # if_2
          $B7: {  # true
            exit_loop  # loop_1
          }
        }
        %17:ptr<uniform, vec2<f32>, read> = access %x_7, 0u
        %18:f32 = load_vector_element %17, 1u
        %x_44:f32 = let %18
        %20:i32 = call %tint_f32_to_i32, %x_44
        %21:i32 = mul %20, 2i
        %22:i32 = call %tint_div_i32, %21, 2i
        store %a, %22
        continue  # -> $B4
      }
      $B4: {  # continuing
        %24:i32 = load %i
        %x_48:i32 = let %24
        %26:i32 = add %x_48, 1i
        store %i, %26
        next_iteration  # -> $B3
      }
    }
    %27:i32 = load %a
    %x_50:i32 = let %27
    %29:bool = eq %x_50, 1i
    if %29 [t: $B8, f: $B9] {  # if_3
      $B8: {  # true
        store %x_GLF_color, vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f)
        exit_if  # if_3
      }
      $B9: {  # false
        store %x_GLF_color, vec4<f32>(0.0f)
        exit_if  # if_3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B10: {
    %31:void = call %main_1
    %32:vec4<f32> = load %x_GLF_color
    %33:main_out = construct %32
    ret %33
  }
}
%tint_div_i32 = func(%lhs:i32, %rhs:i32):i32 {
  $B11: {
    %36:bool = eq %rhs, 0i
    %37:bool = eq %lhs, -2147483648i
    %38:bool = eq %rhs, -1i
    %39:bool = and %37, %38
    %40:bool = or %36, %39
    %41:i32 = select %rhs, 1i, %40
    %42:i32 = div %lhs, %41
    ret %42
  }
}
%tint_f32_to_i32 = func(%value:f32):i32 {
  $B12: {
    %44:i32 = convert %value
    %45:bool = gte %value, -2147483648.0f
    %46:i32 = select -2147483648i, %44, %45
    %47:bool = lte %value, 2147483520.0f
    %48:i32 = select 2147483647i, %46, %47
    ret %48
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
