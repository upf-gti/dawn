SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 1> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 3> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_8:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_11:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%f1_ = func():i32 {
  $B2: {
    %a:ptr<function, i32, read_write> = var
    %i:ptr<function, i32, read_write> = var
    store %a, 256i
    %8:f32 = load_vector_element %gl_FragCoord, 1u
    %9:ptr<uniform, f32, read> = access %x_8, 0u, 0i, 0u
    %10:f32 = load %9
    %11:bool = gt %8, %10
    if %11 [t: $B3] {  # if_1
      $B3: {  # true
        %12:i32 = load %a
        %13:i32 = add %12, 1i
        store %a, %13
        exit_if  # if_1
      }
    }
    %14:i32 = load %a
    %15:i32 = countOneBits %14
    store %i, %15
    %16:i32 = load %i
    %17:ptr<uniform, i32, read> = access %x_11, 0u, 0i, 0u
    %18:i32 = load %17
    %19:bool = lt %16, %18
    if %19 [t: $B4] {  # if_2
      $B4: {  # true
        %20:ptr<uniform, i32, read> = access %x_11, 0u, 0i, 0u
        %21:i32 = load %20
        %x_82:i32 = let %21
        ret %x_82
      }
    }
    %23:i32 = load %i
    %x_83:i32 = let %23
    ret %x_83
  }
}
%main_1 = func():void {
  $B5: {
    %a_1:ptr<function, i32, read_write> = var
    %27:i32 = call %f1_
    %x_38:i32 = let %27
    store %a_1, %x_38
    %29:i32 = load %a_1
    %30:ptr<uniform, i32, read> = access %x_11, 0u, 2i, 0u
    %31:i32 = load %30
    %32:bool = eq %29, %31
    if %32 [t: $B6, f: $B7] {  # if_3
      $B6: {  # true
        %33:ptr<uniform, i32, read> = access %x_11, 0u, 0i, 0u
        %34:i32 = load %33
        %35:f32 = convert %34
        %36:f32 = let %35
        %37:ptr<uniform, i32, read> = access %x_11, 0u, 1i, 0u
        %38:i32 = load %37
        %39:f32 = convert %38
        %40:f32 = let %39
        %41:ptr<uniform, i32, read> = access %x_11, 0u, 1i, 0u
        %42:i32 = load %41
        %43:f32 = convert %42
        %44:f32 = let %43
        %45:ptr<uniform, i32, read> = access %x_11, 0u, 0i, 0u
        %46:i32 = load %45
        %47:f32 = convert %46
        %48:vec4<f32> = construct %36, %40, %44, %47
        store %x_GLF_color, %48
        exit_if  # if_3
      }
      $B7: {  # false
        %49:ptr<uniform, i32, read> = access %x_11, 0u, 1i, 0u
        %50:i32 = load %49
        %51:f32 = convert %50
        %52:vec4<f32> = construct %51
        store %x_GLF_color, %52
        exit_if  # if_3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out {
  $B8: {
    store %gl_FragCoord, %gl_FragCoord_param
    %55:void = call %main_1
    %56:vec4<f32> = load %x_GLF_color
    %57:main_out = construct %56
    ret %57
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
