SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 3> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %i:ptr<function, i32, read_write> = var
    %v:ptr<function, vec4<f32>, read_write> = var
    %6:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %7:i32 = load %6
    store %i, %7
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %8:i32 = load %i
        %9:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
        %10:i32 = load %9
        %11:bool = lt %8, %10
        if %11 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        store %v, vec4<f32>(0.39215686917304992676f, 0.0f, 0.0f, 0.0f)
        %12:f32 = load_vector_element %v, 0u
        %13:i32 = call %tint_f32_to_i32, %12
        %15:i32 = load %i
        %16:bool = gt %13, %15
        if %16 [t: $B7] {  # if_2
          $B7: {  # true
            %17:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
            %18:i32 = load %17
            %19:f32 = convert %18
            %20:vec4<f32> = construct %19
            store %x_GLF_color, %20
            ret
          }
        }
        continue  # -> $B4
      }
      $B4: {  # continuing
        %21:i32 = load %i
        %22:i32 = add %21, 1i
        store %i, %22
        next_iteration  # -> $B3
      }
    }
    %23:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %24:i32 = load %23
    %25:f32 = convert %24
    %26:f32 = let %25
    %27:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %28:i32 = load %27
    %29:f32 = convert %28
    %30:f32 = let %29
    %31:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %32:i32 = load %31
    %33:f32 = convert %32
    %34:f32 = let %33
    %35:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %36:i32 = load %35
    %37:f32 = convert %36
    %38:vec4<f32> = construct %26, %30, %34, %37
    store %x_GLF_color, %38
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B8: {
    %40:void = call %main_1
    %41:vec4<f32> = load %x_GLF_color
    %42:main_out = construct %41
    ret %42
  }
}
%tint_f32_to_i32 = func(%value:f32):i32 {
  $B9: {
    %44:i32 = convert %value
    %45:bool = gte %value, -2147483648.0f
    %46:i32 = select -2147483648i, %44, %45
    %47:bool = lte %value, 2147483520.0f
    %48:i32 = select 2147483647i, %46, %47
    ret %48
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
