SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 2> @offset(0)
}

buf2 = struct @align(4) {
  zero:i32 @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_6:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_8:ptr<uniform, buf2, read> = var @binding_point(0, 2)
  %x_10:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %f:ptr<function, f32, read_write> = var
    %x_48:ptr<function, bool, read_write> = var
    %x_49_phi:ptr<function, bool, read_write> = var
    %9:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
    %10:f32 = load %9
    %x_33:f32 = let %10
    %12:f32 = negation %x_33
    %13:f32 = pow %12, 1.17520117759704589844f
    store %f, %13
    %14:f32 = load %f
    %x_37:f32 = let %14
    %16:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %17:f32 = load %16
    %x_39:f32 = let %17
    %19:bool = eq %x_37, %x_39
    %x_40:bool = let %19
    store %x_49_phi, %x_40
    %21:bool = eq %x_40, false
    if %21 [t: $B3] {  # if_1
      $B3: {  # true
        %22:ptr<uniform, i32, read> = access %x_8, 0u
        %23:i32 = load %22
        %x_45:i32 = let %23
        %25:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %26:i32 = load %25
        %x_47:i32 = let %26
        %28:bool = eq %x_45, %x_47
        store %x_48, %28
        %29:bool = load %x_48
        store %x_49_phi, %29
        exit_if  # if_1
      }
    }
    %30:bool = load %x_49_phi
    %x_49:bool = let %30
    if %x_49 [t: $B4, f: $B5] {  # if_2
      $B4: {  # true
        %32:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %33:i32 = load %32
        %x_54:i32 = let %33
        %35:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %36:i32 = load %35
        %x_57:i32 = let %36
        %38:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %39:i32 = load %38
        %x_60:i32 = let %39
        %41:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %42:i32 = load %41
        %x_63:i32 = let %42
        %44:f32 = convert %x_54
        %45:f32 = let %44
        %46:f32 = convert %x_57
        %47:f32 = let %46
        %48:f32 = convert %x_60
        %49:f32 = let %48
        %50:f32 = convert %x_63
        %51:vec4<f32> = construct %45, %47, %49, %50
        store %x_GLF_color, %51
        exit_if  # if_2
      }
      $B5: {  # false
        %52:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %53:i32 = load %52
        %x_67:i32 = let %53
        %55:f32 = convert %x_67
        %x_68:f32 = let %55
        %57:vec4<f32> = construct %x_68, %x_68, %x_68, %x_68
        store %x_GLF_color, %57
        exit_if  # if_2
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B6: {
    %59:void = call %main_1
    %60:vec4<f32> = load %x_GLF_color
    %61:main_out = construct %60
    ret %61
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
