SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 3> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 3> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_6:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_9:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %arr:ptr<function, array<f32, 3>, read_write> = var
    %a:ptr<function, i32, read_write> = var
    %x_69:ptr<function, bool, read_write> = var
    %x_70:ptr<function, bool, read_write> = var
    %x_79:ptr<function, bool, read_write> = var
    %x_80:ptr<function, bool, read_write> = var
    %11:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
    %12:f32 = load %11
    %13:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %14:f32 = load %13
    %15:ptr<uniform, f32, read> = access %x_6, 0u, 2i, 0u
    %16:f32 = load %15
    %17:array<f32, 3> = construct %12, %14, %16
    store %arr, %17
    store %a, 0i
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %18:i32 = load %a
        %19:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %20:i32 = load %19
        %21:bool = lte %18, %20
        if %21 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        %22:i32 = load %a
        %x_49:i32 = let %22
        %24:i32 = load %a
        %25:i32 = add %24, 1i
        store %a, %25
        %26:ptr<function, f32, read_write> = access %arr, %x_49
        %27:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
        %28:f32 = load %27
        store %26, %28
        continue  # -> $B4
      }
      $B4: {  # continuing
        next_iteration  # -> $B3
      }
    }
    %29:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
    %30:i32 = load %29
    %31:ptr<function, f32, read_write> = access %arr, %30
    %32:f32 = load %31
    %33:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %34:f32 = load %33
    %35:bool = eq %32, %34
    %x_60:bool = let %35
    store %x_70, %x_60
    if %x_60 [t: $B7] {  # if_2
      $B7: {  # true
        %37:ptr<uniform, i32, read> = access %x_9, 0u, 2i, 0u
        %38:i32 = load %37
        %39:ptr<function, f32, read_write> = access %arr, %38
        %40:f32 = load %39
        %41:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
        %42:f32 = load %41
        %43:bool = eq %40, %42
        store %x_69, %43
        %44:bool = load %x_69
        store %x_70, %44
        exit_if  # if_2
      }
    }
    %45:bool = load %x_70
    store %x_80, %45
    %46:bool = load %x_70
    if %46 [t: $B8] {  # if_3
      $B8: {  # true
        %47:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %48:i32 = load %47
        %49:ptr<function, f32, read_write> = access %arr, %48
        %50:f32 = load %49
        %51:ptr<uniform, f32, read> = access %x_6, 0u, 2i, 0u
        %52:f32 = load %51
        %53:bool = eq %50, %52
        store %x_79, %53
        %54:bool = load %x_79
        store %x_80, %54
        exit_if  # if_3
      }
    }
    %55:bool = load %x_80
    if %55 [t: $B9, f: $B10] {  # if_4
      $B9: {  # true
        %56:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %57:i32 = load %56
        %58:ptr<function, f32, read_write> = access %arr, %57
        %59:f32 = load %58
        %60:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
        %61:f32 = load %60
        %62:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
        %63:f32 = load %62
        %64:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
        %65:f32 = load %64
        %66:vec4<f32> = construct %59, %61, %63, %65
        store %x_GLF_color, %66
        exit_if  # if_4
      }
      $B10: {  # false
        %67:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
        %68:f32 = load %67
        %69:vec4<f32> = construct %68
        store %x_GLF_color, %69
        exit_if  # if_4
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B11: {
    %71:void = call %main_1
    %72:vec4<f32> = load %x_GLF_color
    %73:main_out = construct %72
    ret %73
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
