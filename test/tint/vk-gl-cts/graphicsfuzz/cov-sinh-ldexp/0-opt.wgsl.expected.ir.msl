SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 4> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_6:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_9:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %v1:ptr<function, vec2<f32>, read_write> = var
    %v2:ptr<function, vec2<i32>, read_write> = var
    %v3:ptr<function, vec2<f32>, read_write> = var
    %x_66:ptr<function, bool, read_write> = var
    %x_67_phi:ptr<function, bool, read_write> = var
    %10:ptr<uniform, f32, read> = access %x_6, 0u, 2i, 0u
    %11:f32 = load %10
    %x_41:f32 = let %11
    %13:ptr<uniform, f32, read> = access %x_6, 0u, 3i, 0u
    %14:f32 = load %13
    %x_43:f32 = let %14
    %16:vec2<f32> = construct %x_41, %x_43
    %17:vec2<f32> = sinh %16
    store %v1, %17
    %18:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
    %19:i32 = load %18
    %x_47:i32 = let %19
    %21:vec2<i32> = construct %x_47, -3000i
    store %v2, %21
    %22:vec2<f32> = load %v1
    %x_49:vec2<f32> = let %22
    %24:vec2<i32> = load %v2
    %x_50:vec2<i32> = let %24
    %26:vec2<f32> = ldexp %x_49, %x_50
    store %v3, %26
    %27:f32 = load_vector_element %v3, 1u
    %x_53:f32 = let %27
    %29:vec4<f32> = construct %x_53, %x_53, %x_53, %x_53
    store %x_GLF_color, %29
    %30:f32 = load_vector_element %v3, 0u
    %x_56:f32 = let %30
    %32:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %33:f32 = load %32
    %x_58:f32 = let %33
    %35:bool = gt %x_56, %x_58
    %x_59:bool = let %35
    store %x_67_phi, %x_59
    if %x_59 [t: $B3] {  # if_1
      $B3: {  # true
        %37:f32 = load_vector_element %v3, 0u
        %x_63:f32 = let %37
        %39:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
        %40:f32 = load %39
        %x_65:f32 = let %40
        %42:bool = lt %x_63, %x_65
        store %x_66, %42
        %43:bool = load %x_66
        store %x_67_phi, %43
        exit_if  # if_1
      }
    }
    %44:bool = load %x_67_phi
    %x_67:bool = let %44
    if %x_67 [t: $B4, f: $B5] {  # if_2
      $B4: {  # true
        %46:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %47:i32 = load %46
        %x_72:i32 = let %47
        %49:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %50:i32 = load %49
        %x_75:i32 = let %50
        %52:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %53:i32 = load %52
        %x_78:i32 = let %53
        %55:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %56:i32 = load %55
        %x_81:i32 = let %56
        %58:f32 = convert %x_72
        %59:f32 = let %58
        %60:f32 = convert %x_75
        %61:f32 = let %60
        %62:f32 = convert %x_78
        %63:f32 = let %62
        %64:f32 = convert %x_81
        %65:vec4<f32> = construct %59, %61, %63, %64
        store %x_GLF_color, %65
        exit_if  # if_2
      }
      $B5: {  # false
        %66:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %67:i32 = load %66
        %x_85:i32 = let %67
        %69:f32 = convert %x_85
        %x_86:f32 = let %69
        %71:vec4<f32> = construct %x_86, %x_86, %x_86, %x_86
        store %x_GLF_color, %71
        exit_if  # if_2
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B6: {
    %73:void = call %main_1
    %74:vec4<f32> = load %x_GLF_color
    %75:main_out = construct %74
    ret %75
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
