SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 2> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_7:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_11:ptr<uniform, buf1, read> = var @binding_point(0, 1)
}

%func_ = func():vec2<f32> {
  $B2: {
    %v:ptr<function, vec2<f32>, read_write> = var
    %a:ptr<function, i32, read_write> = var
    %indexable:ptr<function, array<vec2<f32>, 3>, read_write> = var
    %8:ptr<uniform, f32, read> = access %x_7, 0u, 0i, 0u
    %9:f32 = load %8
    store_vector_element %v, 1u, %9
    store %a, 2i
    %10:i32 = load %a
    %x_77:i32 = let %10
    %12:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %13:f32 = load %12
    %14:vec2<f32> = construct %13
    %15:vec2<f32> = let %14
    %16:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %17:f32 = load %16
    %18:vec2<f32> = construct %17
    %19:vec2<f32> = load %v
    %20:array<vec2<f32>, 3> = construct %15, %18, %19
    store %indexable, %20
    %21:ptr<function, vec2<f32>, read_write> = access %indexable, %x_77
    %22:vec2<f32> = load %21
    %x_79:vec2<f32> = let %22
    ret %x_79
  }
}
%main_1 = func():void {
  $B3: {
    %25:vec2<f32> = call %func_
    %x_40:vec2<f32> = let %25
    %27:f32 = access %x_40, 1u
    %28:ptr<uniform, f32, read> = access %x_7, 0u, 0i, 0u
    %29:f32 = load %28
    %30:bool = eq %27, %29
    if %30 [t: $B4, f: $B5] {  # if_1
      $B4: {  # true
        %31:ptr<uniform, i32, read> = access %x_11, 0u, 0i, 0u
        %32:i32 = load %31
        %33:f32 = convert %32
        %34:f32 = let %33
        %35:ptr<uniform, i32, read> = access %x_11, 0u, 1i, 0u
        %36:i32 = load %35
        %37:f32 = convert %36
        %38:f32 = let %37
        %39:ptr<uniform, i32, read> = access %x_11, 0u, 1i, 0u
        %40:i32 = load %39
        %41:f32 = convert %40
        %42:f32 = let %41
        %43:ptr<uniform, i32, read> = access %x_11, 0u, 0i, 0u
        %44:i32 = load %43
        %45:f32 = convert %44
        %46:vec4<f32> = construct %34, %38, %42, %45
        store %x_GLF_color, %46
        exit_if  # if_1
      }
      $B5: {  # false
        %47:ptr<uniform, i32, read> = access %x_11, 0u, 1i, 0u
        %48:i32 = load %47
        %49:f32 = convert %48
        %50:vec4<f32> = construct %49
        store %x_GLF_color, %50
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B6: {
    %52:void = call %main_1
    %53:vec4<f32> = load %x_GLF_color
    %54:main_out = construct %53
    ret %54
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
