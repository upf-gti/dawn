SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 4> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_7:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_10:ptr<uniform, buf1, read> = var @binding_point(0, 1)
}

%main_1 = func():void {
  $B2: {
    %a:ptr<function, i32, read_write> = var
    %b:ptr<function, f32, read_write> = var
    %8:f32 = load_vector_element %gl_FragCoord, 1u
    %x_39:f32 = let %8
    %10:ptr<uniform, f32, read> = access %x_7, 0u, 0i, 0u
    %11:f32 = load %10
    %x_41:f32 = let %11
    %13:bool = gte %x_39, %x_41
    %14:i32 = select 2i, 0i, %13
    store %a, %14
    %15:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %16:f32 = load %15
    %x_45:f32 = let %16
    %18:ptr<uniform, f32, read> = access %x_7, 0u, 2i, 0u
    %19:f32 = load %18
    %x_47:f32 = let %19
    %21:ptr<uniform, f32, read> = access %x_7, 0u, 3i, 0u
    %22:f32 = load %21
    %x_49:f32 = let %22
    %24:i32 = load %a
    %x_51:i32 = let %24
    %26:vec3<f32> = construct %x_45, %x_47, %x_49
    %27:f32 = access %26, %x_51
    store %b, %27
    %28:f32 = load %b
    %x_53:f32 = let %28
    %30:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %31:f32 = load %30
    %x_55:f32 = let %31
    %33:bool = eq %x_53, %x_55
    if %33 [t: $B3, f: $B4] {  # if_1
      $B3: {  # true
        %34:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %35:i32 = load %34
        %x_61:i32 = let %35
        %37:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %38:i32 = load %37
        %x_64:i32 = let %38
        %40:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %41:i32 = load %40
        %x_67:i32 = let %41
        %43:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %44:i32 = load %43
        %x_70:i32 = let %44
        %46:f32 = convert %x_61
        %47:f32 = let %46
        %48:f32 = convert %x_64
        %49:f32 = let %48
        %50:f32 = convert %x_67
        %51:f32 = let %50
        %52:f32 = convert %x_70
        %53:vec4<f32> = construct %47, %49, %51, %52
        store %x_GLF_color, %53
        exit_if  # if_1
      }
      $B4: {  # false
        %54:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %55:i32 = load %54
        %x_74:i32 = let %55
        %57:f32 = convert %x_74
        %x_75:f32 = let %57
        %59:vec4<f32> = construct %x_75, %x_75, %x_75, %x_75
        store %x_GLF_color, %59
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out {
  $B5: {
    store %gl_FragCoord, %gl_FragCoord_param
    %62:void = call %main_1
    %63:vec4<f32> = load %x_GLF_color
    %64:main_out = construct %63
    ret %64
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
