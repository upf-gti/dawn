SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 3> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:f32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr_1, 1> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_7:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_11:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %arr:ptr<function, array<i32, 3>, read_write> = var
    %a:ptr<function, i32, read_write> = var
    %b:ptr<function, i32, read_write> = var
    %c:ptr<function, i32, read_write> = var
    %10:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
    %11:i32 = load %10
    %12:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
    %13:i32 = load %12
    %14:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
    %15:i32 = load %14
    %16:array<i32, 3> = construct %11, %13, %15
    store %arr, %16
    %17:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
    %18:i32 = load %17
    %19:ptr<function, i32, read_write> = access %arr, %18
    %20:i32 = load %19
    store %a, %20
    %21:i32 = load %a
    %22:i32 = sub %21, 1i
    store %b, %22
    %23:f32 = load_vector_element %gl_FragCoord, 0u
    %24:ptr<uniform, f32, read> = access %x_11, 0u, 0i, 0u
    %25:f32 = load %24
    %26:bool = lt %23, %25
    if %26 [t: $B3] {  # if_1
      $B3: {  # true
        %27:i32 = load %b
        %28:i32 = add %27, 1i
        store %b, %28
        exit_if  # if_1
      }
    }
    %29:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
    %30:i32 = load %29
    store %c, %30
    %31:i32 = load %c
    %x_63:i32 = let %31
    %33:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
    %34:i32 = load %33
    %x_65:i32 = let %34
    %36:ptr<uniform, i32, read> = access %x_7, 0u, 2i, 0u
    %37:i32 = load %36
    %x_67:i32 = let %37
    %39:i32 = max %x_63, %x_65
    %40:i32 = min %39, %x_67
    %41:ptr<function, i32, read_write> = access %arr, %40
    %42:i32 = load %b
    store %41, %42
    %43:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
    %44:i32 = load %43
    %45:ptr<function, i32, read_write> = access %arr, %44
    %46:i32 = load %45
    %47:f32 = convert %46
    %48:f32 = let %47
    %49:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
    %50:i32 = load %49
    %51:ptr<function, i32, read_write> = access %arr, %50
    %52:i32 = load %51
    %53:f32 = convert %52
    %54:f32 = let %53
    %55:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
    %56:i32 = load %55
    %57:ptr<function, i32, read_write> = access %arr, %56
    %58:i32 = load %57
    %59:f32 = convert %58
    %60:f32 = let %59
    %61:ptr<uniform, i32, read> = access %x_7, 0u, 2i, 0u
    %62:i32 = load %61
    %63:ptr<function, i32, read_write> = access %arr, %62
    %64:i32 = load %63
    %65:f32 = convert %64
    %66:vec4<f32> = construct %48, %54, %60, %65
    store %x_GLF_color, %66
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out {
  $B4: {
    store %gl_FragCoord, %gl_FragCoord_param
    %69:void = call %main_1
    %70:vec4<f32> = load %x_GLF_color
    %71:main_out = construct %70
    ret %71
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
