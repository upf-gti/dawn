SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_GLF_global_loop_count:ptr<private, i32, read_write> = var
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void {
  $B2: {
    store %x_GLF_global_loop_count, 0i
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %5:i32 = load %x_GLF_global_loop_count
        %6:bool = lt %5, 100i
        if %6 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        %7:i32 = load %x_GLF_global_loop_count
        %8:i32 = add %7, 1i
        store %x_GLF_global_loop_count, %8
        %9:i32 = load %x_GLF_global_loop_count
        %10:i32 = load %x_GLF_global_loop_count
        %11:i32 = mul %9, %10
        %12:bool = gt %11, 10i
        if %12 [t: $B7] {  # if_2
          $B7: {  # true
            exit_loop  # loop_1
          }
        }
        continue  # -> $B4
      }
      $B4: {  # continuing
        next_iteration  # -> $B3
      }
    }
    %13:i32 = load %x_GLF_global_loop_count
    %14:bool = eq %13, 4i
    if %14 [t: $B8, f: $B9] {  # if_3
      $B8: {  # true
        %15:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %16:i32 = load %15
        %17:f32 = convert %16
        %18:f32 = let %17
        %19:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
        %20:i32 = load %19
        %21:f32 = convert %20
        %22:f32 = let %21
        %23:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
        %24:i32 = load %23
        %25:f32 = convert %24
        %26:f32 = let %25
        %27:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %28:i32 = load %27
        %29:f32 = convert %28
        %30:vec4<f32> = construct %18, %22, %26, %29
        store %x_GLF_color, %30
        exit_if  # if_3
      }
      $B9: {  # false
        %31:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
        %32:i32 = load %31
        %33:f32 = convert %32
        %34:vec4<f32> = construct %33
        store %x_GLF_color, %34
        exit_if  # if_3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B10: {
    %36:void = call %main_1
    %37:vec4<f32> = load %x_GLF_color
    %38:main_out = construct %37
    ret %38
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
