SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 3> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_6:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_9:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void {
  $B2: {
    %v0:ptr<function, vec2<f32>, read_write> = var
    %v1:ptr<function, vec2<f32>, read_write> = var
    %7:ptr<uniform, f32, read> = access %x_6, 0u, 2i, 0u
    %8:f32 = load %7
    %x_37:f32 = let %8
    %10:vec2<f32> = construct %x_37, 3.79999995231628417969f
    store %v0, %10
    %11:vec2<f32> = load %v0
    %x_39:vec2<f32> = let %11
    %13:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
    %14:f32 = load %13
    %x_43:f32 = let %14
    %16:vec2<f32> = sub %x_39, vec2<f32>(1.0f)
    %17:vec2<f32> = construct %x_43, %x_43
    %18:vec2<f32> = clamp %16, vec2<f32>(0.0f), %17
    store %v1, %18
    %19:vec2<f32> = load %v1
    %x_47:vec2<f32> = let %19
    %21:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %22:f32 = load %21
    %x_49:f32 = let %22
    %24:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
    %25:f32 = load %24
    %x_51:f32 = let %25
    %27:vec2<f32> = construct %x_49, %x_51
    %28:vec2<bool> = eq %x_47, %27
    %29:bool = all %28
    if %29 [t: $B3, f: $B4] {  # if_1
      $B3: {  # true
        %30:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %31:i32 = load %30
        %x_59:i32 = let %31
        %33:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %34:i32 = load %33
        %x_62:i32 = let %34
        %36:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %37:i32 = load %36
        %x_65:i32 = let %37
        %39:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %40:i32 = load %39
        %x_68:i32 = let %40
        %42:f32 = convert %x_59
        %43:f32 = let %42
        %44:f32 = convert %x_62
        %45:f32 = let %44
        %46:f32 = convert %x_65
        %47:f32 = let %46
        %48:f32 = convert %x_68
        %49:vec4<f32> = construct %43, %45, %47, %48
        store %x_GLF_color, %49
        exit_if  # if_1
      }
      $B4: {  # false
        %50:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %51:i32 = load %50
        %x_72:i32 = let %51
        %53:f32 = convert %x_72
        %x_73:f32 = let %53
        %55:vec4<f32> = construct %x_73, %x_73, %x_73, %x_73
        store %x_GLF_color, %55
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B5: {
    %57:void = call %main_1
    %58:vec4<f32> = load %x_GLF_color
    %59:main_out = construct %58
    ret %59
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
