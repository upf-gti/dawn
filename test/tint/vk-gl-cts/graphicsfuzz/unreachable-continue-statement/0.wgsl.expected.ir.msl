SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: buf0 = struct @align(8) {
  injectionSwitch:vec2<f32> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_7:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%computeColor_ = func():vec3<f32> {
  $B2: {
    %x_injected_loop_counter:ptr<function, i32, read_write> = var
    store %x_GLF_color, vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f)
    store %x_injected_loop_counter, 1i
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %5:ptr<uniform, vec2<f32>, read> = access %x_7, 0u
        %6:f32 = load_vector_element %5, 0u
        %x_38:f32 = let %6
        %8:bool = gt %x_38, 1.0f
        if %8 [t: $B5] {  # if_1
          $B5: {  # true
            %9:ptr<uniform, vec2<f32>, read> = access %x_7, 0u
            %10:f32 = load_vector_element %9, 0u
            %x_43:f32 = let %10
            %12:bool = gt %x_43, 1.0f
            if %12 [t: $B6, f: $B7] {  # if_2
              $B6: {  # true
                continue  # -> $B4
              }
              $B7: {  # false
                continue  # -> $B4
              }
            }
            exit_if  # if_1
          }
        }
        ret vec3<f32>(1.0f)
      }
      $B4: {  # continuing
        next_iteration  # -> $B3
      }
    }
    unreachable
  }
}
%main_1 = func():void {
  $B8: {
    %14:vec3<f32> = call %computeColor_
    %x_31:vec3<f32> = let %14
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B9: {
    %17:void = call %main_1
    %18:vec4<f32> = load %x_GLF_color
    %19:main_out = construct %18
    ret %19
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
