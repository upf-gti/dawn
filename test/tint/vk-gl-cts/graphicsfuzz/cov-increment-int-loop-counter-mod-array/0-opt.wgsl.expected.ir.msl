SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 5> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %a:ptr<function, i32, read_write> = var
    %i:ptr<function, i32, read_write> = var
    %indexable:ptr<function, array<i32, 9>, read_write> = var
    %7:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
    %8:i32 = load %7
    %x_38:i32 = let %8
    store %a, %x_38
    %10:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
    %11:i32 = load %10
    %x_40:i32 = let %11
    store %i, %x_40
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %13:i32 = load %i
        %x_45:i32 = let %13
        %15:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %16:i32 = load %15
        %x_47:i32 = let %16
        %18:bool = lt %x_45, %x_47
        if %18 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        %19:i32 = load %i
        %x_50:i32 = let %19
        %21:ptr<uniform, i32, read> = access %x_6, 0u, 4i, 0u
        %22:i32 = load %21
        %x_52:i32 = let %22
        store %indexable, array<i32, 9>(1i, 2i, 3i, 4i, 5i, 6i, 7i, 8i, 9i)
        %24:i32 = call %tint_mod_i32, %x_50, %x_52
        %26:ptr<function, i32, read_write> = access %indexable, %24
        %27:i32 = load %26
        %x_55:i32 = let %27
        %29:i32 = load %a
        %x_56:i32 = let %29
        %31:i32 = add %x_56, %x_55
        store %a, %31
        continue  # -> $B4
      }
      $B4: {  # continuing
        %32:i32 = load %i
        %x_58:i32 = let %32
        %34:i32 = add %x_58, 1i
        store %i, %34
        next_iteration  # -> $B3
      }
    }
    %35:i32 = load %a
    %x_60:i32 = let %35
    %37:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %38:i32 = load %37
    %x_62:i32 = let %38
    %40:bool = eq %x_60, %x_62
    if %40 [t: $B7, f: $B8] {  # if_2
      $B7: {  # true
        %41:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
        %42:i32 = load %41
        %x_68:i32 = let %42
        %44:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
        %45:i32 = load %44
        %x_71:i32 = let %45
        %47:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
        %48:i32 = load %47
        %x_74:i32 = let %48
        %50:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
        %51:i32 = load %50
        %x_77:i32 = let %51
        %53:f32 = convert %x_68
        %54:f32 = let %53
        %55:f32 = convert %x_71
        %56:f32 = let %55
        %57:f32 = convert %x_74
        %58:f32 = let %57
        %59:f32 = convert %x_77
        %60:vec4<f32> = construct %54, %56, %58, %59
        store %x_GLF_color, %60
        exit_if  # if_2
      }
      $B8: {  # false
        %61:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
        %62:i32 = load %61
        %x_81:i32 = let %62
        %64:f32 = convert %x_81
        %x_82:f32 = let %64
        %66:vec4<f32> = construct %x_82, %x_82, %x_82, %x_82
        store %x_GLF_color, %66
        exit_if  # if_2
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B9: {
    %68:void = call %main_1
    %69:vec4<f32> = load %x_GLF_color
    %70:main_out = construct %69
    ret %70
  }
}
%tint_mod_i32 = func(%lhs:i32, %rhs:i32):i32 {
  $B10: {
    %73:bool = eq %rhs, 0i
    %74:bool = eq %lhs, -2147483648i
    %75:bool = eq %rhs, -1i
    %76:bool = and %74, %75
    %77:bool = or %73, %76
    %78:i32 = select %rhs, 1i, %77
    %79:i32 = let %78
    %80:i32 = div %lhs, %79
    %81:i32 = mul %80, %79
    %82:i32 = sub %lhs, %81
    ret %82
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
