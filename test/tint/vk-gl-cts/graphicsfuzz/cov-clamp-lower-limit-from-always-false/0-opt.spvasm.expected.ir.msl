SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 2> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_7:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_9:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void {
  $B2: {
    %a:ptr<function, f32, read_write> = var
    %b:ptr<function, f32, read_write> = var
    store %a, 1.0f
    %7:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %8:f32 = load %7
    %9:f32 = let %8
    %10:f32 = load %a
    %11:f32 = select 0.0f, %10, false
    %12:f32 = clamp %9, %11, 1.0f
    store %b, %12
    %13:f32 = load %b
    %14:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %15:f32 = load %14
    %16:bool = eq %13, %15
    if %16 [t: $B3, f: $B4] {  # if_1
      $B3: {  # true
        %17:f32 = load %b
        %18:ptr<uniform, f32, read> = access %x_7, 0u, 0i, 0u
        %19:f32 = load %18
        %20:f32 = mul %17, %19
        %21:f32 = let %20
        %22:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %23:i32 = load %22
        %24:f32 = convert %23
        %25:f32 = let %24
        %26:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %27:i32 = load %26
        %28:f32 = convert %27
        %29:f32 = let %28
        %30:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %31:i32 = load %30
        %32:f32 = convert %31
        %33:vec4<f32> = construct %21, %25, %29, %32
        store %x_GLF_color, %33
        exit_if  # if_1
      }
      $B4: {  # false
        %34:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %35:i32 = load %34
        %36:f32 = convert %35
        %37:vec4<f32> = construct %36
        store %x_GLF_color, %37
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B5: {
    %39:void = call %main_1
    %40:vec4<f32> = load %x_GLF_color
    %41:main_out = construct %40
    ret %41
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
