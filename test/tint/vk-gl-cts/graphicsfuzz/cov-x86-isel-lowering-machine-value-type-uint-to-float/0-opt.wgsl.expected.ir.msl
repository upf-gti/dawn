SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:u32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_uint_values:array<strided_arr, 2> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:f32 @offset(0)
}

buf2 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr_1, 1> @offset(0)
}

strided_arr_2 = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_2, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_6:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_8:ptr<uniform, buf2, read> = var @binding_point(0, 2)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_12:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void {
  $B2: {
    %a:ptr<function, u32, read_write> = var
    %b:ptr<function, f32, read_write> = var
    %c:ptr<function, u32, read_write> = var
    %9:ptr<uniform, u32, read> = access %x_6, 0u, 0i, 0u
    %10:u32 = load %9
    %x_38:u32 = let %10
    %12:ptr<uniform, f32, read> = access %x_8, 0u, 0i, 0u
    %13:f32 = load %12
    %x_40:f32 = let %13
    %15:u32 = call %tint_f32_to_u32, %x_40
    %17:u32 = and %15, 31u
    %18:u32 = shr %x_38, %17
    store %a, %18
    %19:u32 = load %a
    %x_43:u32 = let %19
    %21:f32 = bitcast %x_43
    store %b, %21
    %22:f32 = load %b
    %x_45:f32 = let %22
    %24:u32 = bitcast %x_45
    store %c, %24
    %25:u32 = load %c
    %x_47:u32 = let %25
    %27:ptr<uniform, u32, read> = access %x_6, 0u, 0i, 0u
    %28:u32 = load %27
    %x_49:u32 = let %28
    %30:bool = eq %x_47, %x_49
    if %30 [t: $B3, f: $B4] {  # if_1
      $B3: {  # true
        %31:ptr<uniform, i32, read> = access %x_12, 0u, 0i, 0u
        %32:i32 = load %31
        %x_55:i32 = let %32
        %34:ptr<uniform, i32, read> = access %x_12, 0u, 1i, 0u
        %35:i32 = load %34
        %x_58:i32 = let %35
        %37:ptr<uniform, i32, read> = access %x_12, 0u, 1i, 0u
        %38:i32 = load %37
        %x_61:i32 = let %38
        %40:ptr<uniform, i32, read> = access %x_12, 0u, 0i, 0u
        %41:i32 = load %40
        %x_64:i32 = let %41
        %43:f32 = convert %x_55
        %44:f32 = let %43
        %45:f32 = convert %x_58
        %46:f32 = let %45
        %47:f32 = convert %x_61
        %48:f32 = let %47
        %49:f32 = convert %x_64
        %50:vec4<f32> = construct %44, %46, %48, %49
        store %x_GLF_color, %50
        exit_if  # if_1
      }
      $B4: {  # false
        %51:f32 = load %b
        %x_67:f32 = let %51
        %53:vec4<f32> = construct %x_67, %x_67, %x_67, %x_67
        store %x_GLF_color, %53
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B5: {
    %55:void = call %main_1
    %56:vec4<f32> = load %x_GLF_color
    %57:main_out = construct %56
    ret %57
  }
}
%tint_f32_to_u32 = func(%value:f32):u32 {
  $B6: {
    %59:u32 = convert %value
    %60:bool = gte %value, 0.0f
    %61:u32 = select 0u, %59, %60
    %62:bool = lte %value, 4294967040.0f
    %63:u32 = select 4294967295u, %61, %62
    ret %63
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
