SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:u32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_uint_values:array<strided_arr, 2> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:f32 @offset(0)
}

buf2 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr_1, 1> @offset(0)
}

strided_arr_2 = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_2, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_6:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_8:ptr<uniform, buf2, read> = var @binding_point(0, 2)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_12:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void {
  $B2: {
    %a:ptr<function, u32, read_write> = var
    %b:ptr<function, f32, read_write> = var
    %c:ptr<function, u32, read_write> = var
    %9:ptr<uniform, u32, read> = access %x_6, 0u, 0i, 0u
    %10:u32 = load %9
    %11:u32 = let %10
    %12:ptr<uniform, f32, read> = access %x_8, 0u, 0i, 0u
    %13:f32 = load %12
    %14:u32 = call %tint_f32_to_u32, %13
    %16:u32 = and %14, 31u
    %17:u32 = shr %11, %16
    store %a, %17
    %18:u32 = load %a
    %19:f32 = bitcast %18
    store %b, %19
    %20:f32 = load %b
    %21:u32 = bitcast %20
    store %c, %21
    %22:u32 = load %c
    %23:ptr<uniform, u32, read> = access %x_6, 0u, 0i, 0u
    %24:u32 = load %23
    %25:bool = eq %22, %24
    if %25 [t: $B3, f: $B4] {  # if_1
      $B3: {  # true
        %26:ptr<uniform, i32, read> = access %x_12, 0u, 0i, 0u
        %27:i32 = load %26
        %28:f32 = convert %27
        %29:f32 = let %28
        %30:ptr<uniform, i32, read> = access %x_12, 0u, 1i, 0u
        %31:i32 = load %30
        %32:f32 = convert %31
        %33:f32 = let %32
        %34:ptr<uniform, i32, read> = access %x_12, 0u, 1i, 0u
        %35:i32 = load %34
        %36:f32 = convert %35
        %37:f32 = let %36
        %38:ptr<uniform, i32, read> = access %x_12, 0u, 0i, 0u
        %39:i32 = load %38
        %40:f32 = convert %39
        %41:vec4<f32> = construct %29, %33, %37, %40
        store %x_GLF_color, %41
        exit_if  # if_1
      }
      $B4: {  # false
        %42:f32 = load %b
        %43:vec4<f32> = construct %42
        store %x_GLF_color, %43
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B5: {
    %45:void = call %main_1
    %46:vec4<f32> = load %x_GLF_color
    %47:main_out = construct %46
    ret %47
  }
}
%tint_f32_to_u32 = func(%value:f32):u32 {
  $B6: {
    %49:u32 = convert %value
    %50:bool = gte %value, 0.0f
    %51:u32 = select 0u, %49, %50
    %52:bool = lte %value, 4294967040.0f
    %53:u32 = select 4294967295u, %51, %52
    ret %53
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
