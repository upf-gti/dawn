SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 6> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_5:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %x_33:ptr<function, vec4<f32>, read_write> = var
    %x_36:ptr<function, i32, read_write> = var
    %x_38:ptr<function, i32, read_write> = var
    %x_74:ptr<function, bool, read_write> = var
    %x_75:ptr<function, bool, read_write> = var
    %9:ptr<uniform, i32, read> = access %x_5, 0u, 0i, 0u
    %10:i32 = load %9
    %x_29:i32 = let %10
    %12:ptr<uniform, i32, read> = access %x_5, 0u, 1i, 0u
    %13:i32 = load %12
    %x_31:i32 = let %13
    store %x_33, vec4<f32>(0.0f)
    store %x_36, %x_29
    store %x_38, %x_31
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %x_53:ptr<function, vec4<f32>, read_write> = var
        %x_34:ptr<function, vec4<f32>, read_write> = var
        %x_62:ptr<function, i32, read_write> = var
        %x_39:ptr<function, i32, read_write> = var
        %19:ptr<uniform, i32, read> = access %x_5, 0u, 4i, 0u
        %20:i32 = load %19
        %x_41:i32 = let %20
        %22:i32 = load %x_38
        %23:bool = lt %22, %x_41
        if %23 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        %x_56:ptr<function, i32, read_write> = var
        switch 0u [c: (default, $B7)] {  # switch_1
          $B7: {  # case
            %25:i32 = load %x_38
            %26:ptr<uniform, i32, read> = access %x_5, 0u, 3i, 0u
            %27:i32 = load %26
            %28:bool = gt %25, %27
            if %28 [t: $B8] {  # if_2
              $B8: {  # true
                %29:vec4<f32> = load %x_33
                store %x_34, %29
                store %x_62, 2i
                exit_switch  # switch_1
              }
            }
            %30:vec4<f32> = load %x_33
            store %x_53, %30
            store %x_56, %x_29
            loop [b: $B9, c: $B10] {  # loop_2
              $B9: {  # body
                %x_54:ptr<function, vec4<f32>, read_write> = var
                %x_57:ptr<function, i32, read_write> = var
                %33:i32 = load %x_56
                %34:bool = lt %33, %x_41
                if %34 [t: $B11, f: $B12] {  # if_3
                  $B11: {  # true
                    exit_if  # if_3
                  }
                  $B12: {  # false
                    exit_loop  # loop_2
                  }
                }
                continue  # -> $B10
              }
              $B10: {  # continuing
                %35:i32 = load %x_38
                %36:i32 = load %x_56
                %37:i32 = add %35, %36
                %38:f32 = convert %37
                %39:vec4<f32> = construct %38
                store %x_54, %39
                %40:i32 = load %x_56
                %41:i32 = add %40, 1i
                store %x_57, %41
                %42:vec4<f32> = load %x_54
                store %x_53, %42
                %43:i32 = load %x_57
                store %x_56, %43
                next_iteration  # -> $B9
              }
            }
            %44:vec4<f32> = load %x_53
            store %x_GLF_color, %44
            %45:vec4<f32> = load %x_53
            store %x_34, %45
            store %x_62, %x_31
            exit_switch  # switch_1
          }
        }
        continue  # -> $B4
      }
      $B4: {  # continuing
        %46:i32 = load %x_38
        %47:i32 = add %46, 1i
        store %x_39, %47
        %48:vec4<f32> = load %x_34
        store %x_33, %48
        %49:i32 = load %x_36
        %50:i32 = load %x_62
        %51:i32 = add %49, %50
        store %x_36, %51
        %52:i32 = load %x_39
        store %x_38, %52
        next_iteration  # -> $B3
      }
    }
    %53:vec4<f32> = load %x_GLF_color
    %54:vec4<f32> = let %53
    %55:ptr<uniform, i32, read> = access %x_5, 0u, 2i, 0u
    %56:i32 = load %55
    %57:f32 = convert %56
    %58:vec4<f32> = construct %57
    %59:vec4<bool> = eq %54, %58
    %60:bool = all %59
    %x_69:bool = let %60
    store %x_75, %x_69
    if %x_69 [t: $B13] {  # if_4
      $B13: {  # true
        %62:i32 = load %x_36
        %63:ptr<uniform, i32, read> = access %x_5, 0u, 5i, 0u
        %64:i32 = load %63
        %65:bool = eq %62, %64
        store %x_74, %65
        %66:bool = load %x_74
        store %x_75, %66
        exit_if  # if_4
      }
    }
    %67:bool = load %x_75
    if %67 [t: $B14, f: $B15] {  # if_5
      $B14: {  # true
        %68:f32 = convert %x_31
        %x_79:f32 = let %68
        %70:f32 = convert %x_29
        %x_80:f32 = let %70
        %72:vec4<f32> = construct %x_79, %x_80, %x_80, %x_79
        store %x_GLF_color, %72
        exit_if  # if_5
      }
      $B15: {  # false
        %73:f32 = convert %x_29
        %74:vec4<f32> = construct %73
        store %x_GLF_color, %74
        exit_if  # if_5
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B16: {
    %76:void = call %main_1
    %77:vec4<f32> = load %x_GLF_color
    %78:main_out = construct %77
    ret %78
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
