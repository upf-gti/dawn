SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_GLF_global_loop_count:ptr<private, i32, read_write> = var
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void {
  $B2: {
    store %x_GLF_global_loop_count, 0i
    %5:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %6:i32 = load %5
    %7:f32 = convert %6
    %8:f32 = let %7
    %9:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %10:i32 = load %9
    %11:f32 = convert %10
    %12:f32 = let %11
    %13:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %14:i32 = load %13
    %15:f32 = convert %14
    %16:f32 = let %15
    %17:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %18:i32 = load %17
    %19:f32 = convert %18
    %20:vec4<f32> = construct %8, %12, %16, %19
    store %x_GLF_color, %20
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %x_54:ptr<function, bool, read_write> = var
        %x_55:ptr<function, bool, read_write> = var
        %23:i32 = load %x_GLF_global_loop_count
        %24:bool = lt %23, 100i
        if %24 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        %25:i32 = load %x_GLF_global_loop_count
        %26:i32 = add %25, 1i
        store %x_GLF_global_loop_count, %26
        store %x_55, true
        if false [t: $B7] {  # if_2
          $B7: {  # true
            %27:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
            %28:i32 = load %27
            %29:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
            %30:i32 = load %29
            %31:bool = eq %28, %30
            store %x_54, %31
            %32:bool = load %x_54
            store %x_55, %32
            exit_if  # if_2
          }
        }
        %33:bool = load %x_55
        %34:bool = eq %33, false
        if %34 [t: $B8] {  # if_3
          $B8: {  # true
            exit_loop  # loop_1
          }
        }
        continue  # -> $B4
      }
      $B4: {  # continuing
        next_iteration  # -> $B3
      }
    }
    loop [b: $B9, c: $B10] {  # loop_2
      $B9: {  # body
        %35:i32 = load %x_GLF_global_loop_count
        %36:bool = lt %35, 100i
        if %36 [t: $B11, f: $B12] {  # if_4
          $B11: {  # true
            exit_if  # if_4
          }
          $B12: {  # false
            exit_loop  # loop_2
          }
        }
        %37:i32 = load %x_GLF_global_loop_count
        %38:i32 = add %37, 1i
        store %x_GLF_global_loop_count, %38
        %39:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %40:i32 = load %39
        %41:f32 = convert %40
        %42:vec4<f32> = construct %41
        store %x_GLF_color, %42
        continue  # -> $B10
      }
      $B10: {  # continuing
        next_iteration  # -> $B9
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B13: {
    %44:void = call %main_1
    %45:vec4<f32> = load %x_GLF_color
    %46:main_out = construct %45
    ret %46
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
