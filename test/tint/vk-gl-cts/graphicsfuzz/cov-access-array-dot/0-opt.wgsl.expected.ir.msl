SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 3> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr_1, 3> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_6:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_9:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %numbers:ptr<function, array<i32, 3>, read_write> = var
    %a:ptr<function, vec2<f32>, read_write> = var
    %b:ptr<function, f32, read_write> = var
    %8:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %9:i32 = load %8
    %x_38:i32 = let %9
    %11:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %12:i32 = load %11
    %x_40:i32 = let %12
    %14:ptr<function, i32, read_write> = access %numbers, %x_38
    store %14, %x_40
    %15:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %16:i32 = load %15
    %x_43:i32 = let %16
    %18:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %19:i32 = load %18
    %x_45:i32 = let %19
    %21:ptr<function, i32, read_write> = access %numbers, %x_43
    store %21, %x_45
    %22:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
    %23:i32 = load %22
    %x_48:i32 = let %23
    %25:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
    %26:i32 = load %25
    %x_50:i32 = let %26
    %28:ptr<function, i32, read_write> = access %numbers, %x_48
    store %28, %x_50
    %29:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %30:i32 = load %29
    %x_53:i32 = let %30
    %32:ptr<uniform, f32, read> = access %x_9, 0u, 2i, 0u
    %33:f32 = load %32
    %x_56:f32 = let %33
    %35:bool = lt 0.0f, %x_56
    %36:i32 = select 2i, 1i, %35
    %37:ptr<function, i32, read_write> = access %numbers, %36
    %38:i32 = load %37
    %x_60:i32 = let %38
    %40:f32 = convert %x_53
    %41:f32 = let %40
    %42:f32 = convert %x_60
    %43:vec2<f32> = construct %41, %42
    store %a, %43
    %44:vec2<f32> = load %a
    %x_63:vec2<f32> = let %44
    %46:ptr<uniform, f32, read> = access %x_9, 0u, 1i, 0u
    %47:f32 = load %46
    %x_65:f32 = let %47
    %49:ptr<uniform, f32, read> = access %x_9, 0u, 1i, 0u
    %50:f32 = load %49
    %x_67:f32 = let %50
    %52:vec2<f32> = construct %x_65, %x_67
    %53:f32 = dot %x_63, %52
    store %b, %53
    %54:f32 = load %b
    %x_70:f32 = let %54
    %56:ptr<uniform, f32, read> = access %x_9, 0u, 0i, 0u
    %57:f32 = load %56
    %x_72:f32 = let %57
    %59:bool = eq %x_70, %x_72
    if %59 [t: $B3, f: $B4] {  # if_1
      $B3: {  # true
        %60:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
        %61:i32 = load %60
        %x_78:i32 = let %61
        %63:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %64:i32 = load %63
        %x_81:i32 = let %64
        %66:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %67:i32 = load %66
        %x_84:i32 = let %67
        %69:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
        %70:i32 = load %69
        %x_87:i32 = let %70
        %72:f32 = convert %x_78
        %73:f32 = let %72
        %74:f32 = convert %x_81
        %75:f32 = let %74
        %76:f32 = convert %x_84
        %77:f32 = let %76
        %78:f32 = convert %x_87
        %79:vec4<f32> = construct %73, %75, %77, %78
        store %x_GLF_color, %79
        exit_if  # if_1
      }
      $B4: {  # false
        %80:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %81:i32 = load %80
        %x_91:i32 = let %81
        %83:f32 = convert %x_91
        %x_92:f32 = let %83
        %85:vec4<f32> = construct %x_92, %x_92, %x_92, %x_92
        store %x_GLF_color, %85
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B5: {
    %87:void = call %main_1
    %88:vec4<f32> = load %x_GLF_color
    %89:main_out = construct %88
    ret %89
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
