SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: buf1 = struct @align(4) {
  ten:i32 @offset(0)
}

buf0 = struct @align(4) {
  minusEight:i32 @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_8:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_10:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %a:ptr<function, i32, read_write> = var
    %b:ptr<function, i32, read_write> = var
    %i:ptr<function, i32, read_write> = var
    store %a, 0i
    store %b, 0i
    store %i, 0i
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %8:i32 = load %i
        %x_36:i32 = let %8
        %10:ptr<uniform, i32, read> = access %x_8, 0u
        %11:i32 = load %10
        %x_38:i32 = let %11
        %13:bool = lt %x_36, %x_38
        if %13 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        %14:i32 = load %a
        %x_41:i32 = let %14
        %16:bool = gt %x_41, 5i
        if %16 [t: $B7] {  # if_2
          $B7: {  # true
            exit_loop  # loop_1
          }
        }
        %17:ptr<uniform, i32, read> = access %x_10, 0u
        %18:i32 = load %17
        %x_46:i32 = let %18
        %20:i32 = load %a
        %x_48:i32 = let %20
        %22:i32 = call %tint_div_i32, %x_46, -4i
        %24:i32 = add %x_48, %22
        store %a, %24
        %25:i32 = load %b
        %x_50:i32 = let %25
        %27:i32 = add %x_50, 1i
        store %b, %27
        continue  # -> $B4
      }
      $B4: {  # continuing
        %28:i32 = load %i
        %x_52:i32 = let %28
        %30:i32 = add %x_52, 1i
        store %i, %30
        next_iteration  # -> $B3
      }
    }
    %31:i32 = load %b
    %x_54:i32 = let %31
    %33:bool = eq %x_54, 3i
    if %33 [t: $B8, f: $B9] {  # if_3
      $B8: {  # true
        store %x_GLF_color, vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f)
        exit_if  # if_3
      }
      $B9: {  # false
        store %x_GLF_color, vec4<f32>(0.0f)
        exit_if  # if_3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B10: {
    %35:void = call %main_1
    %36:vec4<f32> = load %x_GLF_color
    %37:main_out = construct %36
    ret %37
  }
}
%tint_div_i32 = func(%lhs:i32, %rhs:i32):i32 {
  $B11: {
    %40:bool = eq %rhs, 0i
    %41:bool = eq %lhs, -2147483648i
    %42:bool = eq %rhs, -1i
    %43:bool = and %41, %42
    %44:bool = or %40, %43
    %45:i32 = select %rhs, 1i, %44
    %46:i32 = div %lhs, %45
    ret %46
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
