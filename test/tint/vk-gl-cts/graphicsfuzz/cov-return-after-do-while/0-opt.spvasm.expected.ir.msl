SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_5:ptr<uniform, buf1, read> = var @binding_point(0, 0)
}

%main_1 = func():void {
  $B2: {
    %4:ptr<uniform, i32, read> = access %x_5, 0u, 0i, 0u
    %5:i32 = load %4
    %6:f32 = convert %5
    %7:f32 = let %6
    %8:ptr<uniform, i32, read> = access %x_5, 0u, 1i, 0u
    %9:i32 = load %8
    %10:f32 = convert %9
    %11:f32 = let %10
    %12:ptr<uniform, i32, read> = access %x_5, 0u, 1i, 0u
    %13:i32 = load %12
    %14:f32 = convert %13
    %15:f32 = let %14
    %16:ptr<uniform, i32, read> = access %x_5, 0u, 0i, 0u
    %17:i32 = load %16
    %18:f32 = convert %17
    %19:vec4<f32> = construct %7, %11, %15, %18
    store %x_GLF_color, %19
    %20:ptr<uniform, i32, read> = access %x_5, 0u, 1i, 0u
    %21:i32 = load %20
    %22:ptr<uniform, i32, read> = access %x_5, 0u, 0i, 0u
    %23:i32 = load %22
    %24:bool = gt %21, %23
    if %24 [t: $B3] {  # if_1
      $B3: {  # true
        loop [b: $B4, c: $B5] {  # loop_1
          $B4: {  # body
            %25:ptr<uniform, i32, read> = access %x_5, 0u, 0i, 0u
            %26:i32 = load %25
            %27:f32 = convert %26
            %28:vec4<f32> = construct %27
            store %x_GLF_color, %28
            continue  # -> $B5
          }
          $B5: {  # continuing
            %29:ptr<uniform, i32, read> = access %x_5, 0u, 1i, 0u
            %30:i32 = load %29
            %x_50:i32 = let %30
            %32:ptr<uniform, i32, read> = access %x_5, 0u, 0i, 0u
            %33:i32 = load %32
            %x_52:i32 = let %33
            %35:bool = gt %x_50, %x_52
            %36:bool = eq %35, false
            break_if %36  # -> [t: exit_loop loop_1, f: $B4]
          }
        }
        ret
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B6: {
    %38:void = call %main_1
    %39:vec4<f32> = load %x_GLF_color
    %40:main_out = construct %39
    ret %40
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
