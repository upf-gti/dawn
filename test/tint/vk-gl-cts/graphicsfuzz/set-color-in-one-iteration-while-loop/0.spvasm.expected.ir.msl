SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: buf0 = struct @align(8) {
  injectionSwitch:vec2<f32> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void {
  $B2: {
    loop [b: $B3] {  # loop_1
      $B3: {  # body
        %x_38:ptr<function, bool, read_write> = var
        %x_41:ptr<function, vec4<f32>, read_write> = var
        %x_42:ptr<function, vec4<f32>, read_write> = var
        %x_39:ptr<function, bool, read_write> = var
        %9:f32 = load_vector_element %gl_FragCoord, 0u
        %10:f32 = clamp %9, 0.0f, 1.0f
        %11:i32 = call %tint_f32_to_i32, %10
        %x_34:i32 = let %11
        store %x_GLF_color, vec4<f32>(0.0f)
        store %x_38, false
        store %x_41, vec4<f32>(0.0f)
        loop [b: $B4, c: $B5] {  # loop_2
          $B4: {  # body
            %x_47:ptr<function, i32, read_write> = var
            %15:vec4<f32> = load %x_41
            store %x_42, %15
            store %x_47, 0i
            loop [b: $B6, c: $B7] {  # loop_3
              $B6: {  # body
                %x_45:ptr<function, vec4<f32>, read_write> = var
                %x_48:ptr<function, i32, read_write> = var
                %18:ptr<uniform, vec2<f32>, read> = access %x_6, 0u
                %19:f32 = load_vector_element %18, 1u
                %x_50:f32 = let %19
                %21:bool = load %x_38
                store %x_39, %21
                %22:i32 = load %x_47
                %23:i32 = let %22
                %24:i32 = call %tint_f32_to_i32, %x_50
                %25:i32 = add %x_34, %24
                %26:bool = lt %23, %25
                if %26 [t: $B8, f: $B9] {  # if_1
                  $B8: {  # true
                    exit_if  # if_1
                  }
                  $B9: {  # false
                    exit_loop  # loop_3
                  }
                }
                %x_66:ptr<function, vec4<f32>, read_write> = var
                %x_70:ptr<function, vec4<f32>, read_write> = var
                %29:bool = lt %x_34, 0i
                if %29 [t: $B10, f: $B11] {  # if_2
                  $B10: {  # true
                    store %x_39, true
                    exit_loop  # loop_3
                  }
                  $B11: {  # false
                    %30:bool = eq %x_34, 1i
                    if %30 [t: $B12, f: $B13] {  # if_3
                      $B12: {  # true
                        %31:f32 = convert %x_34
                        %32:vec2<f32> = construct %31
                        %x_65:vec2<f32> = let %32
                        %34:f32 = access %x_65, 0u
                        %35:vec4<f32> = load %x_42
                        %36:vec2<f32> = swizzle %35, yz
                        %37:f32 = access %x_65, 1u
                        %38:vec4<f32> = construct %34, %36, %37
                        store %x_66, %38
                        %39:vec4<f32> = load %x_66
                        store %x_45, %39
                        exit_if  # if_3
                      }
                      $B13: {  # false
                        %40:i32 = add %x_34, 1i
                        %41:f32 = convert %40
                        %42:vec2<f32> = construct %41
                        %x_69:vec2<f32> = let %42
                        %44:f32 = access %x_69, 0u
                        %45:vec4<f32> = load %x_42
                        %46:vec2<f32> = swizzle %45, yz
                        %47:f32 = access %x_69, 1u
                        %48:vec4<f32> = construct %44, %46, %47
                        store %x_70, %48
                        %49:vec4<f32> = load %x_70
                        store %x_45, %49
                        exit_if  # if_3
                      }
                    }
                    exit_if  # if_2
                  }
                }
                continue  # -> $B7
              }
              $B7: {  # continuing
                %50:i32 = load %x_47
                %51:i32 = add %50, 1i
                store %x_48, %51
                %52:vec4<f32> = load %x_45
                store %x_42, %52
                %53:i32 = load %x_48
                store %x_47, %53
                next_iteration  # -> $B6
              }
            }
            %54:bool = load %x_39
            if %54 [t: $B14] {  # if_4
              $B14: {  # true
                exit_loop  # loop_2
              }
            }
            continue  # -> $B5
          }
          $B5: {  # continuing
            %55:bool = load %x_39
            store %x_38, %55
            %56:vec4<f32> = load %x_42
            store %x_41, %56
            %57:bool = lt %x_34, 0i
            %58:bool = eq %57, false
            break_if %58  # -> [t: exit_loop loop_2, f: $B4]
          }
        }
        %59:bool = load %x_39
        if %59 [t: $B15] {  # if_5
          $B15: {  # true
            exit_loop  # loop_1
          }
        }
        %60:vec4<f32> = load %x_42
        store %x_GLF_color, %60
        exit_loop  # loop_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out {
  $B16: {
    store %gl_FragCoord, %gl_FragCoord_param
    %63:void = call %main_1
    %64:vec4<f32> = load %x_GLF_color
    %65:main_out = construct %64
    ret %65
  }
}
%tint_f32_to_i32 = func(%value:f32):i32 {
  $B17: {
    %67:i32 = convert %value
    %68:bool = gte %value, -2147483648.0f
    %69:i32 = select -2147483648i, %67, %68
    %70:bool = lte %value, 2147483520.0f
    %71:i32 = select 2147483647i, %69, %70
    ret %71
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
