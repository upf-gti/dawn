SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 1> @offset(0)
}

buf1 = struct @align(8) {
  v1:vec2<f32> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_8:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %m24:ptr<function, mat2x2<f32>, read_write> = var
    %a:ptr<function, f32, read_write> = var
    %v2:ptr<function, vec2<f32>, read_write> = var
    %v3:ptr<function, vec2<f32>, read_write> = var
    %9:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %10:f32 = load %9
    %11:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %12:f32 = load %11
    %13:vec2<f32> = construct %10, %12
    %14:vec2<f32> = let %13
    %15:ptr<uniform, vec2<f32>, read> = access %x_8, 0u
    %16:f32 = load_vector_element %15, 0u
    %17:f32 = mul %16, 1.0f
    %18:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %19:f32 = load %18
    %20:vec2<f32> = construct %17, %19
    %21:mat2x2<f32> = construct %14, %20
    store %m24, %21
    %22:ptr<function, vec2<f32>, read_write> = access %m24, 0u
    %23:f32 = load_vector_element %22, 0u
    store %a, %23
    store %v2, vec2<f32>(1.0f)
    %24:vec2<f32> = load %v2
    %25:vec2<f32> = let %24
    %26:f32 = load %a
    %27:vec2<f32> = construct %26, 1.0f
    %28:vec2<f32> = reflect %25, %27
    store %v3, %28
    %29:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %30:f32 = load %29
    %31:f32 = load_vector_element %v3, 0u
    %32:f32 = load_vector_element %v3, 1u
    %33:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %34:f32 = load %33
    %35:vec4<f32> = construct %30, %31, %32, %34
    store %x_GLF_color, %35
    %36:ptr<uniform, vec2<f32>, read> = access %x_8, 0u
    %37:f32 = load_vector_element %36, 1u
    %38:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %39:f32 = load %38
    %40:bool = eq %37, %39
    if %40 [t: $B3, f: $B4] {  # if_1
      $B3: {  # true
        %41:f32 = load_vector_element %x_GLF_color, 0u
        %42:f32 = load_vector_element %x_GLF_color, 3u
        %43:vec4<f32> = construct %41, vec2<f32>(0.0f), %42
        store %x_GLF_color, %43
        exit_if  # if_1
      }
      $B4: {  # false
        store %x_GLF_color, vec4<f32>(0.0f)
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B5: {
    %45:void = call %main_1
    %46:vec4<f32> = load %x_GLF_color
    %47:main_out = construct %46
    ret %47
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
