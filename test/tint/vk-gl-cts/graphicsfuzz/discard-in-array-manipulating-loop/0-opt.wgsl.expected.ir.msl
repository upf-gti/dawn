SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:1257 internal compiler error: main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %continue_execution:ptr<private, bool, read_write> = var, true
}

%main_1 = func():void {
  $B2: {
    %data:ptr<function, array<f32, 10>, read_write> = var
    %i:ptr<function, i32, read_write> = var
    store %data, array<f32, 10>(0.10000000149011611938f, 0.20000000298023223877f, 0.30000001192092895508f, 0.40000000596046447754f, 0.5f, 0.60000002384185791016f, 0.69999998807907104492f, 0.80000001192092895508f, 0.89999997615814208984f, 1.0f)
    store %i, 0i
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %7:i32 = load %i
        %x_7:i32 = let %7
        %9:bool = lt %x_7, 10i
        if %9 [t: $B5, f: $B6] {  # if_1
          $B5: {  # true
            exit_if  # if_1
          }
          $B6: {  # false
            exit_loop  # loop_1
          }
        }
        %10:f32 = load_vector_element %gl_FragCoord, 0u
        %x_50:f32 = let %10
        %12:bool = lt %x_50, 0.0f
        if %12 [t: $B7] {  # if_2
          $B7: {  # true
            store %continue_execution, false
            exit_if  # if_2
          }
        }
        %13:i32 = load %i
        %x_8:i32 = let %13
        %15:ptr<function, f32, read_write> = access %data, %x_8
        %16:f32 = load %15
        %x_55:f32 = let %16
        %18:ptr<function, f32, read_write> = access %data, 0i
        store %18, %x_55
        continue  # -> $B4
      }
      $B4: {  # continuing
        %19:i32 = load %i
        %x_9:i32 = let %19
        %21:i32 = add %x_9, 1i
        store %i, %21
        next_iteration  # -> $B3
      }
    }
    %22:ptr<function, f32, read_write> = access %data, 0i
    %23:f32 = load %22
    %x_58:f32 = let %23
    %25:vec4<f32> = construct %x_58, 0.0f, 0.0f, 1.0f
    store %x_GLF_color, %25
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out {
  $B8: {
    store %gl_FragCoord, %gl_FragCoord_param
    %28:void = call %main_1
    %29:vec4<f32> = load %x_GLF_color
    %30:main_out = construct %29
    %31:bool = load %continue_execution
    %32:bool = eq %31, false
    if %32 [t: $B9] {  # if_3
      $B9: {  # true
        terminate_invocation
      }
    }
    ret %30
  }
}

invalid entry point IO struct uses
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
