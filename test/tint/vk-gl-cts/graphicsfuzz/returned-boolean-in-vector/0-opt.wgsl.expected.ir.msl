SKIP: FAILED

../../src/tint/lang/msl/writer/printer/printer.cc:500 internal compiler error: buf0 = struct @align(8) {
  injectionSwitch:vec2<f32> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

$B1: {  # root
  %x_5:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void {
  $B2: {
    %x_36:ptr<function, bool, read_write> = var, false
    %x_37:ptr<function, bool, read_write> = var
    %x_7:ptr<function, i32, read_write> = var
    %x_38:ptr<function, bool, read_write> = var
    %color:ptr<function, vec3<f32>, read_write> = var
    %x_40:ptr<function, bool, read_write> = var
    %x_43:ptr<function, vec3<f32>, read_write> = var
    %x_40_phi:ptr<function, bool, read_write> = var
    %x_42_phi:ptr<function, vec3<f32>, read_write> = var
    %x_56_phi:ptr<function, bool, read_write> = var
    %x_58_phi:ptr<function, bool, read_write> = var
    store %x_40_phi, false
    store %x_42_phi, vec3<f32>(0.0f)
    loop [b: $B3, c: $B4] {  # loop_1
      $B3: {  # body
        %x_43_phi:ptr<function, vec3<f32>, read_write> = var
        %16:bool = load %x_40_phi
        store %x_40, %16
        %17:vec3<f32> = load %x_42_phi
        %x_42:vec3<f32> = let %17
        %19:ptr<uniform, vec2<f32>, read> = access %x_5, 0u
        %20:f32 = load_vector_element %19, 1u
        %x_47:f32 = let %20
        store %x_43_phi, %x_42
        %22:bool = lt %x_47, 0.0f
        if %22 [t: $B5] {  # if_1
          $B5: {  # true
            store %color, vec3<f32>(1.0f)
            store %x_43_phi, vec3<f32>(1.0f)
            exit_if  # if_1
          }
        }
        %23:vec3<f32> = load %x_43_phi
        store %x_43, %23
        continue  # -> $B4
      }
      $B4: {  # continuing
        %24:bool = load %x_40
        store %x_40_phi, %24
        %25:vec3<f32> = load %x_43
        store %x_42_phi, %25
        break_if true  # -> [t: exit_loop loop_1, f: $B3]
      }
    }
    store %x_36, false
    %26:bool = load %x_40
    store %x_56_phi, %26
    store %x_58_phi, false
    loop [b: $B6] {  # loop_2
      $B6: {  # body
        %x_62:ptr<function, bool, read_write> = var
        %x_62_phi:ptr<function, bool, read_write> = var
        %x_64_phi:ptr<function, bool, read_write> = var
        %x_65_phi:ptr<function, i32, read_write> = var
        %x_70_phi:ptr<function, bool, read_write> = var
        %x_71_phi:ptr<function, bool, read_write> = var
        %33:bool = load %x_56_phi
        %x_56:bool = let %33
        %35:bool = load %x_58_phi
        %x_58:bool = let %35
        store %x_7, 0i
        store %x_62_phi, %x_56
        store %x_64_phi, false
        store %x_65_phi, 0i
        loop [b: $B7] {  # loop_3
          $B7: {  # body
            %37:bool = load %x_62_phi
            store %x_62, %37
            %38:bool = load %x_64_phi
            %x_64:bool = let %38
            %40:i32 = load %x_65_phi
            %x_65:i32 = let %40
            %x_68:bool = let true
            %43:bool = load %x_62
            store %x_70_phi, %43
            store %x_71_phi, false
            if true [t: $B8, f: $B9] {  # if_2
              $B8: {  # true
                exit_if  # if_2
              }
              $B9: {  # false
                exit_loop  # loop_3
              }
            }
            store %x_36, true
            store %x_37, true
            store %x_70_phi, true
            store %x_71_phi, true
            exit_loop  # loop_3
          }
        }
        %44:bool = load %x_70_phi
        %x_70:bool = let %44
        %46:bool = load %x_71_phi
        %x_71:bool = let %46
        if true [t: $B10] {  # if_3
          $B10: {  # true
            exit_loop  # loop_2
          }
        }
        store %x_36, true
        exit_loop  # loop_2
      }
    }
    store %x_38, true
    %x_73:f32 = let 1.0f
    %49:f32 = load_vector_element %x_43, 0u
    %50:f32 = load_vector_element %x_43, 1u
    %51:f32 = load_vector_element %x_43, 2u
    %52:vec4<f32> = construct %49, %50, %51, 1.0f
    %53:vec4<f32> = let %52
    %54:vec4<f32> = construct %x_73, %x_73, %x_73, %x_73
    %55:vec4<f32> = add %53, %54
    store %x_GLF_color, %55
    store %x_GLF_color, vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f)
    ret
  }
}
%tint_symbol = @fragment func():main_out {
  $B11: {
    %57:void = call %main_1
    %58:vec4<f32> = load %x_GLF_color
    %59:main_out = construct %58
    ret %59
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
